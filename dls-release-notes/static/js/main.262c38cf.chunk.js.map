{"version":3,"sources":["context/AppContext.tsx","components/Router.tsx","components/DefaultRoute.tsx","components/LoadingIndicator.tsx","components/AppHeader.tsx","App.tsx","reportWebVitals.ts","dompurify-hooks.ts","utils/getOptions.ts","index.tsx","utils/memoizedRequest.ts","context/Labels.context.tsx","theme.ts"],"names":["INITIAL_APP_STATE","loading","archive","data","taxonomies","language","INITIAL_APP_CONTEXT","state","actions","options","archiveUrl","AppContext","createContext","ACTIONS","appContextReducer","action","type","payload","matchingLang","alternative_langauges","findIndex","id","AppContextProvider","children","useState","setLoading","useReducer","dispatch","useEffect","Object","keys","find","key","useRef","loadData","url","a","__self","memoizedRequest","loadArchive","switchLanguage","lang","loadTaxonomies","current","Provider","value","displayName","Router","router","DefaultRoute","shouldRedirect","setshouldRedirect","useContext","defaultToArchive","to","release","releases","LoaderWrap","styled","div","LoadingIndicator","show","setShow","size","AppHeaderWrap","header","AppHeaderImg","img","AppHeaderTitle","span","VerticalRule","AppHeader","showHeader","alt","src","productName","ReleaseNote","React","lazy","Archive","AppStyles","theme","colors","primary","secondary","focusedLinkBackground","breakpoints","tabletLandscape","min","App","appTheme","Boolean","routingStrategy","path","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DOMPurify","addHook","node","hasAttribute","rel","getAttribute","includes","setAttribute","DEFAULT_OPTIONS","setPageTitle","container","document","getElementById","ReactDOM","render","StrictMode","ele","Error","JSON","parse","_","getOptions","MEMOIZED_VALUES","Map","init","has","get","fetch","resp","json","set","LabelsContext","LabelsContextProvider","appContext","translations","setTranslations","labels","labelsUrl","loadTranslations","console","error","useLabels","useCallback","THEME","noTheme","containerWidth","mobile","max","tablet","desktop","desktopLg"],"mappings":"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","file":"static/js/main.262c38cf.chunk.js","sourcesContent":["\r\nimport { createContext, FunctionComponent, useEffect, useReducer, useRef, useState } from \"react\";\r\nimport { AppOptions, ArchiveResponseModel, ReleaseNoteResponseModel, TaxonomiesResponseModel } from \"../models\";\r\nimport memoizedRequest from \"../utils/memoizedRequest\";\r\n\r\nconst INITIAL_APP_STATE = {\r\n    loading: false,\r\n    archive: null,\r\n    data: null,\r\n    taxonomies: null,\r\n    language: null\r\n};\r\n\r\nconst INITIAL_APP_CONTEXT = {\r\n    state: INITIAL_APP_STATE,\r\n    actions: {},\r\n    options: {\r\n        archiveUrl: '',\r\n    }\r\n};\r\n\r\nexport interface AppContextModel {\r\n    state: AppState;\r\n    options: AppOptions;\r\n    actions: {\r\n        [methodName: string]: (url: string) => Promise<void>\r\n    };\r\n}\r\n\r\nexport const AppContext = createContext<AppContextModel>(INITIAL_APP_CONTEXT);\r\n\r\nexport interface AppState {\r\n    loading: boolean;\r\n    archive: ArchiveResponseModel | null;\r\n    data: ReleaseNoteResponseModel | null;\r\n    taxonomies: TaxonomiesResponseModel | null;\r\n    language: string | null;\r\n}\r\n\r\ninterface AppReducerActions {\r\n    type: string;\r\n    payload?: any;\r\n}\r\n\r\nconst ACTIONS = {\r\n    START_LOADING: 'START_LOADING',\r\n    DONE_LOADING: 'DONE_LOADING',\r\n    SET_DATA: 'SET_DATA',\r\n    SET_ARCHIVE: 'SET_ARCHIVE',\r\n    SET_LANGUAGE: 'SET_LANGUAGE',\r\n    SET_TAXONOMIES: 'SET_TAXONOMIES',\r\n    CLEAR_ALL: 'CLEAR_ALL',\r\n};\r\n\r\nconst appContextReducer = (state: AppState, action: AppReducerActions): AppState => {\r\n    switch (action.type) {\r\n        case ACTIONS.START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ACTIONS.DONE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case ACTIONS.SET_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case ACTIONS.SET_ARCHIVE:\r\n            return {\r\n                ...state,\r\n                archive: action.payload\r\n            };\r\n        case ACTIONS.SET_LANGUAGE:\r\n            if (action.payload === state.language) {\r\n                return state;\r\n            }\r\n            const matchingLang = state.archive?.alternative_langauges.findIndex(({ id }) => id === action.payload);\r\n            if (typeof matchingLang === \"undefined\" || matchingLang < -1) {\r\n                return state;\r\n            }\r\n            return {\r\n                ...state,\r\n                language: action.payload\r\n            };\r\n        case ACTIONS.SET_TAXONOMIES:\r\n            return {\r\n                ...state,\r\n                taxonomies: action.payload\r\n            };\r\n\r\n        case ACTIONS.CLEAR_ALL:\r\n            return INITIAL_APP_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const AppContextProvider: FunctionComponent<{ options: AppOptions }> = ({ options, children }) => {\r\n    const [loading, setLoading] = useState<{ [key: string]: boolean }>({\r\n        data: false,\r\n        archive: false,\r\n        language: false,\r\n        taxonomies: false\r\n    });\r\n\r\n    const [state, dispatch] = useReducer(appContextReducer, INITIAL_APP_STATE);\r\n\r\n    // Unified loading state\r\n    useEffect(() => {\r\n        if (Object.keys(loading).find((key) => loading[key])) {\r\n            dispatch({ type: ACTIONS.START_LOADING });\r\n        } else {\r\n            dispatch({ type: ACTIONS.DONE_LOADING });\r\n        }\r\n    }, [loading]);\r\n\r\n    const actions = useRef({\r\n        loadData: async (url: string): Promise<void> => {\r\n            if (loading.data || url === state.data?.__self) return;\r\n            setLoading({ ...loading, data: true });\r\n            const data = await memoizedRequest(url);\r\n            dispatch({ type: ACTIONS.SET_DATA, payload: data });\r\n            setLoading({ ...loading, data: false });\r\n        },\r\n        loadArchive: async (url: string): Promise<void> => {\r\n            if (loading.archive) return;\r\n            setLoading({ ...loading, archive: true });\r\n            const data = await memoizedRequest(url);\r\n            dispatch({ type: ACTIONS.SET_ARCHIVE, payload: data });\r\n            setLoading({ ...loading, archive: false });\r\n        },\r\n        switchLanguage: async (lang: string): Promise<void> => {\r\n            if (loading.language) return;\r\n            setLoading({ ...loading, language: true });\r\n            dispatch({ type: ACTIONS.SET_LANGUAGE, payload: lang });\r\n            setLoading({ ...loading, language: false });\r\n        },\r\n        loadTaxonomies: async (url: string): Promise<void> => {\r\n            if (loading.taxonomies) return;\r\n            setLoading({ ...loading, taxonomies: true });\r\n            const data = await memoizedRequest(url);\r\n            dispatch({ type: ACTIONS.SET_TAXONOMIES, payload: data });\r\n            setLoading({ ...loading, taxonomies: false });\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (state.archive?.taxonomies) {\r\n            actions.current.loadTaxonomies(state.archive?.taxonomies);\r\n        }\r\n    }, [state.archive, actions]);\r\n\r\n\r\n    useEffect(() => {\r\n        actions.current.loadArchive(options.archiveUrl);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [options.archiveUrl]);\r\n\r\n    // Effects when archive changes\r\n    useEffect(() => {\r\n        if (!state.archive) {\r\n            return;\r\n        }\r\n        if (!state.language) {\r\n            dispatch({ type: ACTIONS.SET_LANGUAGE, payload: state.archive.language });\r\n            return;\r\n        }\r\n        if (state.archive.language !== state.language) {\r\n            const url = state.archive.alternative_langauges.find(({ id }) => id === state.language)?.url;\r\n            if (url) {\r\n                dispatch({ type: ACTIONS.CLEAR_ALL });\r\n                actions.current.loadArchive(url);\r\n            }\r\n        }\r\n    }, [state.archive, state.language]);\r\n\r\n\r\n    // @ts-expect-error\r\n    return <AppContext.Provider value={{ state, actions: actions.current, options }} displayName=\"App Main Context\">\r\n        {children}\r\n    </AppContext.Provider>;\r\n};","import { FunctionComponent } from \"react\";\r\nimport { HashRouter, MemoryRouter, BrowserRouter } from \"react-router-dom\";\r\nimport { RoutingStrategy } from \"../models\";\r\n\r\nexport const Router: FunctionComponent<{ router?: RoutingStrategy }> = ({ router, children }) => {\r\n    switch (router) {\r\n        case 'memory':\r\n            return <MemoryRouter>{children}</MemoryRouter>;\r\n        case 'browser':\r\n            return <BrowserRouter>{children}</BrowserRouter>;\r\n        case 'hash':\r\n        default:\r\n            return <HashRouter>{children}</HashRouter>;\r\n    }\r\n}","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nexport const DefaultRoute: FunctionComponent = () => {\r\n    const [shouldRedirect, setshouldRedirect] = useState(false);\r\n    const { state, options } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        if (state.loading || !state.archive) {\r\n            setshouldRedirect(true);\r\n        }\r\n    }, [state, setshouldRedirect])\r\n\r\n    if (!shouldRedirect || !state.archive) {\r\n        return null;\r\n    }\r\n    \r\n    const language = state.archive.language;\r\n\r\n    if (options.defaultToArchive) {\r\n        return <Redirect to={`/archive/`} />;\r\n    }\r\n\r\n    const release = state.archive.releases[0].id;\r\n\r\n    return <Redirect to={`/release/${language}/${release}`} />;\r\n}","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport Loader from \"carbon-react/lib/components/loader\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst LoaderWrap = styled.div`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const LoadingIndicator: FunctionComponent = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const { state } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        setShow(state.loading);\r\n    }, [state.loading, setShow])\r\n\r\n    if (show) {\r\n        return <LoaderWrap><Loader size='large' /></LoaderWrap>;\r\n    }\r\n\r\n    return null;\r\n}","import { FunctionComponent, useContext } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst AppHeaderWrap = styled.header`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    color: #fff;\r\n    height: var(--header-height, 3rem);\r\n    background: #003349;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    z-index: 999999;\r\n    @media print {\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst AppHeaderImg = styled.img`\r\n    margin-top: .2rem;\r\n    height: 1.3rem;\r\n    width: auto;\r\n`;\r\n\r\nconst AppHeaderTitle = styled.span`\r\n    font-weight: 700;\r\n`;\r\n\r\nconst VerticalRule = styled.span`\r\n    background-color: #335C6D;\r\n    width: 1px;\r\n    height: 24px;\r\n    margin: auto 1rem;\r\n`;\r\n\r\nexport const AppHeader: FunctionComponent = () => {\r\n    const { options } = useContext(AppContext);\r\n    if (!options.showHeader) {\r\n        return null;\r\n    }\r\n    return <AppHeaderWrap>\r\n        <AppHeaderImg\r\n            alt=\"Sage\"\r\n            src=\"/dls-release-notes/images/logo-image.svg\"\r\n        />\r\n        <VerticalRule />\r\n        <AppHeaderTitle>{options.productName}</AppHeaderTitle>\r\n    </AppHeaderWrap>;\r\n}","import React, { FunctionComponent, Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport Loader from \"carbon-react/lib/components/loader\";\r\n\r\nimport { AppContextProvider } from './context/AppContext';\r\nimport { LabelsContextProvider } from './context/Labels.context';\r\n\r\nimport { AppOptions } from './models';\r\n\r\nimport { Router } from './components/Router';\r\nimport { DefaultRoute } from './components/DefaultRoute';\r\nimport { LoadingIndicator } from './components/LoadingIndicator';\r\nimport { AppHeader } from './components/AppHeader';\r\n\r\nimport appTheme from './theme';\r\n\r\nconst ReleaseNote = React.lazy(() => import('./components/ReleaseNote'));\r\nconst Archive = React.lazy(() => import('./components/Archive'));\r\n\r\n\r\nconst AppStyles = styled.div<{ showHeader: boolean }>`\r\n  line-height: 1.5;\r\n  color: rgba(0,0,0,0.9);\r\n  background: #fff;\r\n  box-sizing: border-box;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  * {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  a:not(.custom){\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    &:hover{\r\n        color: ${({ theme }) => theme.colors.secondary};\r\n    }\r\n    &:focus {\r\n        color: rgba(0, 0, 0, 0.9);\r\n        background-color: ${({ theme }) => theme.colors.focusedLinkBackground};\r\n        outline: none;\r\n    }\r\n  }\r\n\r\n  .text-content{\r\n    font-size: var(--body-text-size, .875rem);\r\n    a[target=\"_blank\"]{\r\n      position: relative;\r\n      margin-right: 1.3rem;\r\n      &:after {\r\n          position: absolute;\r\n          font-family: CarbonIcons;\r\n          content: \"\";\r\n          text-decoration: none;\r\n          transform: translateY(-1px);\r\n          margin-left: .25rem;\r\n          font-size: 1rem;\r\n      }\r\n    }\r\n    p {\r\n      margin: 0 0 1.5rem;\r\n    }\r\n    ul {\r\n        list-style-type: square;\r\n    }\r\n    ul, ol {\r\n        padding: 0 0 0 1.6rem;\r\n        margin: 1.5rem 0;\r\n    }\r\n    li {\r\n        margin: 0 0 1rem;\r\n    }\r\n    ol ol {\r\n      list-style-type: lower-alpha;\r\n    }\r\n    ol ol ol {\r\n      list-style-type: upper-alpha;\r\n    }\r\n    img{\r\n        display: block;\r\n        height: auto;\r\n        max-width: 100%;\r\n        margin-bottom: 1.5rem;\r\n    }\r\n    figure {\r\n        margin: 1.5rem 0;\r\n        img {\r\n            margin-bottom: .5rem;\r\n        }\r\n    }\r\n    figcaption {\r\n        font-style: italic;\r\n    }\r\n  }\r\n\r\n  [data-component=\"link\"] {\r\n    a, button {\r\n      font-size: var(--body-text-size, inherit);\r\n    }\r\n  }\r\n\r\n\r\n  [data-component=\"pill\"] {\r\n    background-clip: padding-box;\r\n  }\r\n\r\n  // CSS variables:\r\n  --header-height: ${({ showHeader }) => showHeader ? '3rem' : '0'};\r\n  --body-text-size: 1rem;\r\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}){\r\n    --body-text-size: .875rem;\r\n  }\r\n`;\r\n\r\nexport const App: FunctionComponent<{ options: AppOptions }> = ({ options }) => {\r\n  return <ThemeProvider theme={appTheme}>\r\n    <AppStyles showHeader={Boolean(options.showHeader)}>\r\n      <Router router={options.routingStrategy}>\r\n        <AppContextProvider options={options}>\r\n          <LabelsContextProvider>\r\n            <AppHeader />\r\n            <Switch>\r\n              <Route path=\"/release/:language/:version\">\r\n                <Suspense fallback={<Loader size=\"small\" />}>\r\n                  <ReleaseNote />\r\n                </Suspense>\r\n              </Route>\r\n              <Route path=\"/archive/:language\">\r\n                <Suspense fallback={<Loader size=\"small\" />}>\r\n                  <Archive />\r\n                </Suspense>\r\n              </Route>\r\n              <Route>\r\n                <DefaultRoute />\r\n              </Route>\r\n            </Switch>\r\n            <LoadingIndicator />\r\n          </LabelsContextProvider>\r\n        </AppContextProvider>\r\n      </Router>\r\n    </AppStyles>\r\n  </ThemeProvider>\r\n};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import DOMPurify from 'dompurify';\r\n\r\nDOMPurify.addHook('afterSanitizeAttributes', (node: Element) => {\r\n    // set all elements owning target to target=_blank\r\n    if (node.hasAttribute('target')) {\r\n        const rel = node.getAttribute('rel');\r\n        if (!rel) {\r\n            node.setAttribute('rel', 'noopener');\r\n        } else if (!rel.includes('noopener')) {\r\n            node.setAttribute('rel', `${rel} noopener`);\r\n        }\r\n    }\r\n});\r\n","import { AppOptions, RoutingStrategy } from '../models';\r\n\r\nconst DEFAULT_OPTIONS = { \r\n  archiveUrl: '',\r\n  showHeader: true,\r\n  routingStrategy: \"hash\" as RoutingStrategy,\r\n  defaultToArchive: false,\r\n  setPageTitle: false\r\n};\r\n\r\nexport const getOptions = (ele: HTMLElement | null): AppOptions => {\r\n  try {\r\n    if (!ele) {\r\n      throw Error;\r\n    }\r\n    const options = ele.getAttribute('data-release-note-options');\r\n    if (!options) {\r\n      throw Error;\r\n    }\r\n    return {\r\n      ...DEFAULT_OPTIONS,\r\n      ...JSON.parse(options)\r\n    };\r\n  } catch (_) {\r\n    return DEFAULT_OPTIONS;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Type overwrites:\r\nimport './index.d';\r\n\r\n// Hooks for dompurify\r\nimport './dompurify-hooks';\r\n\r\nimport { getOptions } from './utils/getOptions';\r\n\r\nconst container = document.getElementById(\"dls-release-notes-root\");\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App options={getOptions(container)} />\r\n  </React.StrictMode>,\r\n  container\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","\r\nconst MEMOIZED_VALUES = new Map<string, any>();\r\n\r\nasync function memoizedRequest<T = any>(url: string, init?: RequestInit): Promise<T> {\r\n\r\n    if (MEMOIZED_VALUES.has(url)) {\r\n        return MEMOIZED_VALUES.get(url) as T;\r\n    }\r\n\r\n    const resp = await fetch(url, init);\r\n    const data = await resp.json();\r\n\r\n    MEMOIZED_VALUES.set(url, data);\r\n\r\n    return data as T;\r\n};\r\n\r\nexport default memoizedRequest;","import { useCallback, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { createContext, FunctionComponent, useContext } from \"react\";\r\nimport memoizedRequest from \"../utils/memoizedRequest\";\r\n\r\nimport { AppContext } from './AppContext';\r\n\r\nexport const LabelsContext = createContext<LabelsModel>({});\r\n\r\ninterface LabelsModel {\r\n    [key: string]: string;\r\n}\r\n\r\nexport const LabelsContextProvider: FunctionComponent = ({ children }) => {\r\n    const appContext = useContext(AppContext);\r\n    const [translations, setTranslations] = useState<LabelsModel>({});\r\n    useEffect(() => {\r\n        if (!appContext?.state?.archive?.labels) {\r\n            return;\r\n        }\r\n        const labelsUrl = appContext.state.archive.labels;\r\n        async function loadTranslations() {\r\n            try {\r\n                const labels = await memoizedRequest<LabelsModel>(labelsUrl);\r\n                setTranslations(labels);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        loadTranslations();\r\n    }, [appContext.state.archive, setTranslations])\r\n    return <LabelsContext.Provider value={translations}>{children}</LabelsContext.Provider>;\r\n}\r\n\r\nexport const useLabels = () => {\r\n    const labels = useContext(LabelsContext);\r\n    const callback = useCallback(\r\n        (key: string): string => {\r\n            return labels[key] || '';\r\n        },\r\n        [labels],\r\n    );\r\n    return callback;\r\n}","import { noTheme } from \"carbon-react/lib/style/themes\";\r\n\r\nconst THEME = {\r\n    ...noTheme,\r\n    containerWidth: '800px',\r\n    breakpoints: {\r\n        mobile: {\r\n            min: '0',\r\n            max: '599px'\r\n        },\r\n        tablet: {\r\n            min: '600px',\r\n            max: '959px'\r\n        },\r\n        tabletLandscape: {\r\n            min: '960px',\r\n            max: '1260px',\r\n        },\r\n        desktop: {\r\n            min: '1261px',\r\n            max: '1439px',\r\n        },\r\n        desktopLg: {\r\n            min: '1440px',\r\n            max: '8200px',\r\n        }\r\n    }\r\n};\r\n\r\nexport default THEME;"],"sourceRoot":""}