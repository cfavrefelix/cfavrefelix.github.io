{"version":3,"sources":["context/Modules.context.tsx","utils/usePrefersReducedMotion.ts","components/AnchorNavigationItem.tsx","components/AnchorNavigation.tsx","components/LanguageSelector.tsx","components/VersionSelector.tsx","components/NavMenu.tsx","components/Sidebar.tsx","styles/print.ts","context/Sidebar.context.tsx","context/Filters.context.tsx","components/ActionButtons.tsx","components/ReleaseNoteTitle.tsx","components/TextContent.tsx","components/AccordionPart.tsx","styles/animations.ts","components/ModulePart.tsx","utils/IDify.tsx","components/TitledPart.tsx","context/Release.context.tsx","utils/useShowPart.ts","components/Highlights.tsx","components/IntroPart.tsx","components/ContentParts.tsx","models.tsx","components/ReleaseNoteContent.tsx","components/MissingRelease.tsx","components/MissingReleaseTitle.tsx","components/Pagination.tsx","components/ArticleFooter.tsx","components/CheckboxSvg.tsx","components/Checkbox.tsx","components/MultiSelectDropdown.tsx","components/TaxonomyOptionSelector.tsx","components/TaxonomySelector.tsx","components/FiltersSidebar.tsx","components/LanguageSwitcher.tsx","components/SetTitle.tsx","components/ReleaseNote.tsx"],"names":["ModuleContext","createContext","modules","addModule","clearModules","displayAnchorNav","reducer","state","action","type","duplicate","findIndex","item","id","payload","ModuleContextProvider","children","useReducer","dispatch","options","useContext","AppContext","useMemo","alwaysDisplayAnchorNav","length","thisModule","Provider","value","usePrefersReducedMotion","window","matchMedia","matches","AnchorNavA","styled","a","theme","colors","focus","activeItem","primary","AnchorNavigationItem","title","active","targetRef","prefersReducedMotion","scrollToTarget","useCallback","event","preventDefault","current","scroll","top","offsetTop","behavior","preventScroll","className","href","onClick","e","AnchorNavWrap","nav","AnchorNavUL","ul","AnchorNavLI","li","AnchorNavigation","useState","setActive","t","useLabels","throttle","useRef","handleScroll","_","index","clientRect","ref","getBoundingClientRect","bottom","document","documentElement","clientHeight","getActive","requestAnimationFrame","useEffect","addEventListener","removeEventListener","fontSize","mb","lineHeight","fontWeight","map","LanguageSelectorWrap","div","breakpoints","tabletLandscape","min","LanguageSelector","useParams","version","language","history","useHistory","appContext","selected","setSelected","languageOptions","setLanguageOptions","archive","alternative_langauges","handleChange","newLanguage","target","push","name","label","placeholder","size","onChange","disablePortal","text","VersionSelectorWrap","VersionSelector","versions","setVersions","releases","console","log","selectedVersion","NavMenuButton","button","NavMenuExpandable","NavMenuExpandableInner","NavMenu","open","setOpen","screenWidth","setScreenWidth","showAccordion","useMediaQuery","query","tablet","max","navId","Math","random","toString","substring","contentRef","handler","innerWidth","expandableHeight","scrollHeight","aria-controls","aria-expanded","aria-labelledby","role","style","height","SidebarEle","section","SidebarPadding","HR","hr","Sidebar","aria-label","HideOnPrint","SidebarContext","isOpen","close","SidebarContextProvider","setIsOpen","exitEle","setExitEle","ev","key","ele","FiltersContext","filters","toggleFilter","clearSelected","clearAll","overwrite","shouldCheckFilters","displayFilters","getUsedTaxonomies","parts","existing","forEach","part","taxonomies","Object","keys","taxonomy","option","Set","add","content_parts","filtersReducer","copyOfFilters","JSON","parse","stringify","newFiltersState","filterKey","thisFilter","optionKey","fromEntries","usedTaxonomies","disabled","Boolean","has","FiltersContextProvider","release","pills","selectedOptions","key2","filter","reduce","prev","ButtonWrap","ActionButtons","sidebarContext","filtersButtonRef","undefined","printScreen","print","selectedFilters","noWrap","buttonType","iconType","ReleaseNoteTitleBar","ReleaseNoteTitle","productName","as","variant","TextContent","content","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","ADD_ATTR","AccordionContent","AccordionPart","iconAlign","flashFocusState","keyframes","ModuleSection","mobile","ModuleHeading","h2","ModulePart","moduleRef","tabIndex","IDify","input","replace","TitlePartDiv","PillsWrap","TitledPart","highlight","group","filtersContext","showTaxonomyAsPill","includes","taxPills","output","i","fullTax","find","thisTax","thisOption","j","color","pillRole","borderColor","showTaxonomies","headingId","headingProps","textTransform","ReleaseContext","ReleaseContextProvider","useShowPart","selectedFiltersKeys","typeIndex","splice","outerLoop","thisKey","index2","Highlights","showPart","addParts","theseParts","thisPart","scrollIntoView","element","pageYOffset","handleClick","getElementById","IntroPart","ContentParts","context","mappedParts","filteredParts","isModule","isAccordion","isGroup","ReleaseNoteArticle","article","ReleaseNoteContent","first","setFirst","params","LinkWrap","MissingRelease","goBack","goToLatest","icon","H1","h1","MissingReleaseTitle","PaginationWrap","Pagination","next","previous","navigateTo","versionId","scrollTo","FooterWrap","footer","props","show","FooterInner","containerWidth","ArticleFooter","data","showFooter","setShowFooter","showPagination","loop","threshhold","showHeader","theLoop","scrollToTop","_event","onKeyDown","nativeEvent","CheckboxSvgWrap","checked","isDisabled","CheckboxSvg","focusable","width","viewBox","d","fill","fillRule","Input","StyledInput","Label","LabelText","span","Checkbox","DropdownWrap","DropdownButton","DropdownOptions","visible","expanded","DropdownOptionItem","OptionText","SelectedOptions","MultiSelectDropdown","selectOption","displayClearAll","listRef","buttonRef","setExpanded","focused","setFocused","setSelectedOptions","timeout","setTimeout","clearTimeout","handleMoveOutside","contains","stopPropagation","clickTitle","querySelectorAll","handleButtonKeyDown","handleKeyDown","optionToSelect","aria-haspopup","onFocus","toLowerCase","z-index","data-value","aria-checked","aria-disabled","join","px","TaxonomyTitle","legend","TaxonomyWrap","fieldset","TaxonomyOptionSelector","useDropdown","TaxonomySelector","BackgroundEle","SidebarTitle","SidebarContent","CloseButton","animationReducer","animating","direction","styles","sidebarT","bg","opacity","sidebar","transform","FiltersSidebar","duration","animation","done","start","Date","now","tick","useAnimation","closeButtonRef","LanguageSwitcher","actions","switchLanguage","SetTitle","setPageTitle","Helmet","ContentWrap","desktop","Grid","GridItemTitle","GridItemSidebar","GridItemMain","main","ReleaseNote","setRelease","noteUrl","setNoteUrl","url","loadData","isMissingRelease","loading","date","product"],"mappings":"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","file":"static/js/5.3451b6e6.chunk.js","sourcesContent":["import { createContext, FunctionComponent, useContext, useMemo, useReducer } from \"react\";\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nexport const ModuleContext = createContext<ModuleContextModel>({\r\n    modules: [],\r\n    addModule: () => { },\r\n    clearModules: () => { },\r\n    displayAnchorNav: true\r\n});\r\n\r\ninterface ModuleContextModel {\r\n    modules: ModuleModel[];\r\n    addModule: (thisModule: ModuleModel) => void;\r\n    clearModules: () => void;\r\n    displayAnchorNav: boolean;\r\n}\r\n\r\nexport interface ModuleModel {\r\n    title: string;\r\n    id: string;\r\n    ref: React.MutableRefObject<HTMLElement | null>;\r\n}\r\n\r\nconst reducer = (state: ModuleModel[], action: any): ModuleModel[] => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            // Replace any duplicates\r\n            const duplicate = state.findIndex((item) => item.id === action.payload.id);\r\n            if (duplicate > -1) {\r\n                // Replace existing if already exists\r\n                state[duplicate] = action.payload;\r\n                return state;\r\n            }\r\n            return [\r\n                ...state,\r\n                action.payload\r\n            ];\r\n        case 'CLEAR':\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const ModuleContextProvider: FunctionComponent = ({ children }) => {\r\n    const [modules, dispatch] = useReducer(reducer, []);\r\n\r\n    const { options } = useContext(AppContext);\r\n\r\n    const displayAnchorNav = useMemo<boolean>(() => {\r\n        if (options.alwaysDisplayAnchorNav) {\r\n            return true;\r\n        }\r\n        if (modules.length > 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }, [options, modules]);\r\n\r\n    const addModule = useMemo(() => (thisModule: ModuleModel) => {\r\n        dispatch({\r\n            type: 'ADD',\r\n            payload: thisModule\r\n        });\r\n    }, [dispatch]);\r\n\r\n    const clearModules = useMemo(() => () => {\r\n        dispatch({ type: 'CLEAR' });\r\n    }, [dispatch]);\r\n\r\n    return <ModuleContext.Provider value={{ modules, addModule, clearModules, displayAnchorNav }}>\r\n        {children}\r\n    </ModuleContext.Provider>\r\n}","import { useMemo } from \"react\";\r\n\r\nfunction usePrefersReducedMotion() {\r\n    return useMemo(() => {\r\n        const QUERY = '(prefers-reduced-motion: no-preference)';\r\n        const mediaQueryList = window.matchMedia(QUERY);\r\n        const prefersReducedMotion = !mediaQueryList.matches;\r\n        return prefersReducedMotion;\r\n    }, []);\r\n}\r\n\r\nexport default usePrefersReducedMotion;","import { FunctionComponent, SyntheticEvent, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport usePrefersReducedMotion from '../utils/usePrefersReducedMotion';\r\n\r\nconst AnchorNavA = styled.a<{ activeItem: boolean }>`\r\n    box-sizing: border-box;\r\n    border-left: .25em solid rgba(0, 0, 0, 0.1);\r\n    text-decoration: none;\r\n    display: block;\r\n    color: inherit;\r\n    font-weight: 700;\r\n    padding: .5rem 1rem;\r\n    outline: none;\r\n    background-clip: padding-box;\r\n    font-size: .875rem;\r\n    line-height: 1.5rem;\r\n    &:hover{\r\n        color: inherit;\r\n    }\r\n    &:focus{\r\n        color: inherit;\r\n        box-shadow: ${({ theme }) => theme.colors.focus} 0px 0px 0px 3px;\r\n    }\r\n    ${({ activeItem, theme }) => activeItem ? `\r\n        border-left-color: ${theme.colors.primary};\r\n        background-color: #fff;\r\n    ` : `\r\n        &:hover{\r\n            background-color: rgba(0,0,0,0.1);\r\n        }\r\n        &:focus{\r\n            background-color: rgba(0,0,0,0.1);\r\n            box-shadow: ${theme.colors.focus} 0px 0px 0px 3px;\r\n        }\r\n    `}\r\n`;\r\n\r\ninterface ComponentProps {\r\n    active: boolean;\r\n    title: string;\r\n    id: string;\r\n    targetRef: React.MutableRefObject<HTMLElement | null>\r\n}\r\n\r\nexport const AnchorNavigationItem: FunctionComponent<ComponentProps> = ({ title, id, active, targetRef }) => {\r\n\r\n    const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n    const scrollToTarget = useCallback((event: SyntheticEvent): void => {\r\n        event.preventDefault();\r\n\r\n        if (!targetRef.current) {\r\n            return;\r\n        }\r\n\r\n        window.scroll({\r\n            top: targetRef.current.offsetTop - 60,\r\n            behavior: prefersReducedMotion ? \"auto\" : \"smooth\"\r\n        });\r\n\r\n        targetRef.current?.focus({ preventScroll: true });\r\n    }, [prefersReducedMotion, targetRef]);\r\n\r\n    return <AnchorNavA\r\n        className=\"custom\"\r\n        href={'#' + id}\r\n        onClick={e => scrollToTarget(e)}\r\n        activeItem={active}\r\n    >\r\n        {title}\r\n    </AnchorNavA>;\r\n}","import Typography from \"carbon-react/lib/components/typography\";\r\nimport { FunctionComponent, useCallback, useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useLabels } from \"../context/Labels.context\";\r\n\r\nimport { ModuleContext } from \"../context/Modules.context\";\r\n\r\nimport { AnchorNavigationItem } from './AnchorNavigationItem';\r\n\r\n\r\nconst AnchorNavWrap = styled.nav`\r\n    flex: 1;\r\n    position: relative;\r\n    margin: 0;\r\n`;\r\n\r\nconst AnchorNavUL = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nconst AnchorNavLI = styled.li`\r\n    margin: 0;\r\n    padding: 0;\r\n    display: block;\r\n`;\r\n\r\n\r\nexport const AnchorNavigation: FunctionComponent = () => {\r\n\r\n    // eslint-disable-next-line\r\n    const [active, setActive] = useState<number>(-1);\r\n\r\n    const { modules } = useContext(ModuleContext);\r\n\r\n    const t = useLabels();\r\n\r\n    const throttle = useRef<boolean>(false);\r\n\r\n    const handleScroll = useCallback((_: Event | null) => {\r\n        if (throttle.current) {\r\n            return;\r\n        }\r\n\r\n        throttle.current = true;\r\n\r\n        const getActive = (): number => {\r\n            for (let index = 0; index < modules.length; index++) {\r\n                const thisModule = modules[index];\r\n                const clientRect = thisModule.ref.current?.getBoundingClientRect();\r\n\r\n                // Continue if rect is null\r\n                if (!clientRect) {\r\n                    continue;\r\n                }\r\n                const { top, bottom } = clientRect;\r\n                if (top < document.documentElement.clientHeight && bottom > 60) {\r\n                    return index;\r\n                }\r\n            }\r\n\r\n            // No element is in the \"active\" position, so return -1 so none are active;\r\n            return -1;\r\n        }\r\n\r\n        setActive(getActive());\r\n\r\n        requestAnimationFrame(() => {\r\n            throttle.current = false;\r\n        });\r\n    }, [modules, setActive, throttle]);\r\n\r\n    useEffect(() => {\r\n        handleScroll(null);\r\n        document.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            document.removeEventListener('scroll', handleScroll);\r\n        }\r\n    }, [handleScroll]);\r\n\r\n    return <>\r\n        {modules.length > 1 && <AnchorNavWrap>\r\n            {/* @ts-expect-error */}\r\n            <Typography fontSize=\"14px\" mb={1} lineHeight=\"1.5\" fontWeight=\"600\">{t('titles.anchorNav')}</Typography>\r\n            <AnchorNavUL>\r\n                {modules.map((item, index) => <AnchorNavLI key={index}>\r\n                    <AnchorNavigationItem\r\n                        active={active === index}\r\n                        title={item.title}\r\n                        id={item.id}\r\n                        targetRef={item.ref}\r\n                    />\r\n                </AnchorNavLI>)}\r\n            </AnchorNavUL>\r\n        </AnchorNavWrap>}\r\n    </>;\r\n}","import { FunctionComponent, SyntheticEvent, useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { Select, Option } from \"carbon-react/lib/components/select\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { AlternativeLanguageModel } from \"../models\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useLabels } from '../context/Labels.context';\r\n\r\nconst LanguageSelectorWrap = styled.div`\r\n    margin-bottom: 1.5rem;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}){\r\n        margin-bottom: 2rem;\r\n    }\r\n    @media print {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const LanguageSelector: FunctionComponent = () => {\r\n\r\n    const { version, language } = useParams<{ language: string, version: string }>();\r\n    const history = useHistory();\r\n\r\n    const appContext = useContext(AppContext);\r\n\r\n    const [selected, setSelected] = useState('');\r\n    const [languageOptions, setLanguageOptions] = useState<AlternativeLanguageModel[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (appContext.state.language) {\r\n            setSelected(appContext.state.language);\r\n        }\r\n        if (appContext.state.archive?.alternative_langauges) {\r\n            setLanguageOptions(appContext.state.archive?.alternative_langauges);\r\n        }\r\n    }, [appContext, setLanguageOptions, setSelected]);\r\n\r\n    useEffect(() => {\r\n        setSelected(language);\r\n    }, [language, setSelected]);\r\n\r\n    const t = useLabels();\r\n\r\n    const handleChange = useCallback(\r\n        (event: SyntheticEvent) => {\r\n            const newLanguage = (event.target as HTMLSelectElement).value;\r\n            if (language !== newLanguage) {\r\n                history.push(`/release/${newLanguage}/${version}`);\r\n            }\r\n        },\r\n        [history, version, language],\r\n    );\r\n\r\n    if (languageOptions.length < 2) {\r\n        return null;;\r\n    }\r\n    return <LanguageSelectorWrap>\r\n        {/* @ts-expect-error */}\r\n        <Select\r\n            name=\"lang-select\"\r\n            id=\"language\"\r\n            label={t('titles.language')}\r\n            placeholder={t('dropdown.select-language')}\r\n            size=\"medium\"\r\n            onChange={(e: SyntheticEvent) => handleChange(e)}\r\n            value={selected}\r\n            disablePortal\r\n        >\r\n            {languageOptions?.map((item, index) => {\r\n                return <Option\r\n                    text={item.title}\r\n                    value={item.id}\r\n                    key={index}\r\n                />;\r\n            })}\r\n        </Select>\r\n    </LanguageSelectorWrap>\r\n}","import { FunctionComponent, SyntheticEvent, useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { Select, Option } from \"carbon-react/lib/components/select\";\r\nimport { OptionProps } from \"carbon-react/lib/components/select/option\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { ReleaseModel } from \"../models\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\n\r\nconst VersionSelectorWrap = styled.div`\r\n    font-size: var(--body-text-size, .875rem);\r\n    margin-bottom: 1.5rem;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}){\r\n        margin-bottom: 2rem;\r\n    }\r\n    @media print {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const VersionSelector: FunctionComponent = () => {\r\n\r\n    const appContext = useContext(AppContext);\r\n\r\n    const [versions, setVersions] = useState<ReleaseModel[]>([]);\r\n\r\n    const t = useLabels();\r\n\r\n    let { version, language } = useParams<{ language: string, version: string }>();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (appContext.state.archive?.releases) {\r\n            console.log(appContext)\r\n            setVersions(appContext.state.archive?.releases);\r\n        }\r\n    }, [appContext]);\r\n\r\n    const options = versions?.map(({ id, title }) => {\r\n        return (<Option\r\n            key={`option-${id}`}\r\n            text={title}\r\n            value={id}\r\n        />) as any as React.ComponentType<OptionProps>\r\n    });\r\n\r\n    const onChange = useCallback((event: SyntheticEvent): void => {\r\n        const selectedVersion = (event.target as HTMLSelectElement).value;\r\n        if (selectedVersion !== version) {\r\n            history.push(`/release/${language}/${selectedVersion}`);\r\n        }\r\n    }, [history, language, version]);\r\n\r\n    return <VersionSelectorWrap>\r\n        {versions?.length > 1 &&\r\n            <Select\r\n                name=\"version-select\"\r\n                id=\"version\"\r\n                label={t('titles.version')}\r\n                size=\"medium\"\r\n                placeholder={t('dropdown.select-version')}\r\n                // @ts-expect-error\r\n                onChange={(event) => onChange(event)}\r\n                value={version}\r\n                disablePortal\r\n            >\r\n                {options}\r\n            </Select>\r\n        }\r\n        {/* <LinkWrap>\r\n            <Link to={`/archive/${language}`}>{t('links.see-all-versions')}</Link>\r\n        </LinkWrap> */}\r\n    </VersionSelectorWrap>\r\n}","import { FunctionComponent, useState, useMemo, useRef, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useLabels } from '../context/Labels.context';\r\nimport Icon from 'carbon-react/lib/components/icon';\r\nimport styled from \"styled-components\";\r\nimport theme from \"../theme\";\r\n\r\nconst NavMenuButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    border: none;\r\n    border-radius: 0;\r\n    background: none;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    height: 40px;\r\n    padding: 0 20px;\r\n    width: 100%;\r\n    [data-component=\"icon\"] {\r\n        transform: rotate(0deg);\r\n        transition: transform .2s;\r\n    }\r\n    &[aria-expanded='false'] [data-component=\"icon\"] {\r\n        transform: rotate(-90deg);\r\n    }\r\n    &:focus {\r\n        box-shadow: ${({ theme }) => theme.colors.focus} 0px 0px 0px 3px;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NavMenuExpandable = styled.div<{ open: boolean }>`\r\n    overflow: hidden;\r\n    transition: height .2s;\r\n`;\r\n\r\nconst NavMenuExpandableInner = styled.div`\r\n`;\r\n\r\nexport const NavMenu: FunctionComponent = ({ children }) => {\r\n    const [open, setOpen] = useState(true);\r\n    const [screenWidth, setScreenWidth] = useState(0);\r\n    const t = useLabels();\r\n\r\n    const showAccordion = useMediaQuery({ query: `(max-width:${theme.breakpoints.tablet.max})` });\r\n    const navId = useMemo(() => `nav-menu-${Math.random().toString().substring(2, 10)}`, []);\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n    \r\n    useEffect(() => {\r\n        const handler = () => {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n        window.addEventListener('resize', handler);\r\n        return () => {\r\n            window.removeEventListener('resize', handler);\r\n        }\r\n    }, [setScreenWidth])\r\n\r\n    const expandableHeight = useMemo(() => {\r\n        if (!open) return 0;\r\n        return contentRef.current?.scrollHeight;\r\n    }, [contentRef, open, screenWidth]);\r\n\r\n    if (showAccordion) {\r\n        return <>\r\n            <NavMenuButton\r\n                id={navId}\r\n                aria-controls={navId + '-expandable'}\r\n                aria-expanded={open}\r\n                onClick={() => {\r\n                    setOpen(!open);\r\n                }}\r\n            >\r\n                <Icon type=\"dropdown\" />\r\n                <span>{t('buttons.nav-menu')}</span>\r\n            </NavMenuButton>\r\n\r\n            <NavMenuExpandable\r\n                id={navId + '-expandable'}\r\n                aria-labelledby={navId}\r\n                role=\"region\"\r\n                open={open}\r\n                style={{\r\n                    height: expandableHeight\r\n                }}\r\n            >\r\n                <NavMenuExpandableInner ref={contentRef}>\r\n                    {children}\r\n                </NavMenuExpandableInner>\r\n            </NavMenuExpandable>\r\n        </>\r\n    }\r\n\r\n    return <>{children}</>\r\n}","import { FunctionComponent, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { AnchorNavigation } from \"./AnchorNavigation\";\r\nimport { LanguageSelector } from \"./LanguageSelector\";\r\nimport { VersionSelector } from \"./VersionSelector\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { ModuleContext } from \"../context/Modules.context\";\r\n\r\n\r\nconst SidebarEle = styled.section`\r\n    font-size: var(--body-text-size, .875rem);;\r\n    background: #F2F5F6;\r\n    border-bottom: 1px solid #CCD6DB;\r\n    margin: 0;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        width: 20rem;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        position: fixed;\r\n        top: var(--header-height, 3rem);\r\n        bottom: 0;\r\n    }\r\n`;\r\n\r\nconst SidebarPadding = styled.div`\r\n    padding: .5rem 1rem 1rem;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        padding: 1.5rem 1rem;\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) and (max-width: ${({ theme }) => theme.breakpoints.tablet.max}) {\r\n        width: 36rem;\r\n        max-width: 100%;\r\n        margin: auto;\r\n        display:flex;\r\n        flex-wrap: wrap;\r\n        > * {\r\n            flex: 1 0 100%;\r\n        }\r\n        > div, > nav {\r\n            flex: 1 0 50%;\r\n            padding: 0 .5rem;\r\n        }\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        padding: 2.5rem 2rem 2rem;\r\n    }\r\n`;\r\n\r\nconst HR = styled.hr`\r\n    border: none;\r\n    z-index: 2;\r\n    flex: 0 0 auto;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    margin: 0 0 1.5rem;\r\n    width: 100%;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        margin: 0 0 2rem -2rem;\r\n        width: calc(100% + 4rem);\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport const Sidebar: FunctionComponent = () => {\r\n    const { displayAnchorNav } = useContext(ModuleContext);\r\n\r\n    return <SidebarEle aria-label=\"Filter and version controls\">\r\n        <NavMenu>\r\n            <SidebarPadding>\r\n                <LanguageSelector />\r\n\r\n                <VersionSelector />\r\n\r\n                {displayAnchorNav && <>\r\n                    <HR />\r\n                    <AnchorNavigation />\r\n                </>}\r\n            </SidebarPadding>\r\n        </NavMenu>\r\n    </SidebarEle>;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const HideOnPrint = styled.div`\r\n    @media print {\r\n        display: none!important;\r\n    }\r\n`;","import { createContext, FunctionComponent, useState, useEffect, useCallback } from \"react\";\r\n\r\ninterface Context {\r\n    isOpen: boolean,\r\n    open: (ele?: HTMLElement) => void,\r\n    close: () => void,\r\n}\r\n\r\nexport const SidebarContext = createContext<Context>({\r\n    isOpen: false,\r\n    open: () => { },\r\n    close: () => { }\r\n});\r\n\r\nexport const SidebarContextProvider: FunctionComponent = ({ children }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [exitEle, setExitEle] = useState<HTMLElement | null>(null);\r\n\r\n    const open = (ele?: HTMLElement) => {\r\n        setIsOpen(true)\r\n        if (ele) {\r\n            setExitEle(ele)\r\n        }\r\n    };\r\n\r\n    const close = useCallback(\r\n        () => {\r\n            setIsOpen(false)\r\n            if (exitEle) {\r\n                requestAnimationFrame(() => {\r\n                    exitEle.focus({ preventScroll: true });\r\n                })\r\n            }\r\n        },\r\n        [exitEle, setIsOpen],\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            return;\r\n        }\r\n        const handler = (ev: KeyboardEvent) => {\r\n            if (ev.key === 'Escape') {\r\n                close();\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handler);\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    }, [isOpen, close])\r\n\r\n    return <SidebarContext.Provider value={{\r\n        isOpen, open, close\r\n    }}>\r\n        {children}\r\n    </SidebarContext.Provider>\r\n}","import { createContext, FunctionComponent, useContext, useEffect, useMemo, useReducer } from \"react\";\r\nimport { ReleaseNotePart, ReleaseNoteResponseModel } from \"../models\";\r\n\r\nimport { AppContext } from './AppContext';\r\n\r\nexport const FiltersContext = createContext<FiltersContextModel>({\r\n    filters: {},\r\n    toggleFilter: () => { },\r\n    clearSelected: () => { },\r\n    clearAll: () => { },\r\n    overwrite: (state: FiltersState) => { },\r\n    selected: {\r\n        length: 0,\r\n        shouldCheckFilters: false,\r\n        filters: {}\r\n    },\r\n    displayFilters: false\r\n});\r\n\r\nexport interface FiltersContextModel {\r\n    filters: FiltersState,\r\n    toggleFilter: (taxonomy: string, option: string) => void\r\n    clearSelected: (taxonomy: string) => void\r\n    clearAll: () => void,\r\n    overwrite: (state: FiltersState) => void,\r\n    selected: {\r\n        length: number,\r\n        shouldCheckFilters: boolean,\r\n        filters: {\r\n            [key: string]: string[];\r\n        }\r\n    },\r\n    displayFilters: boolean\r\n}\r\n\r\nexport interface FiltersState {\r\n    [taxonomy: string]: TaxonomyState;\r\n}\r\n\r\nexport interface TaxonomyState {\r\n    title: string;\r\n    id: string;\r\n    pills: boolean;\r\n    options: {\r\n        [option: string]: OptionState\r\n    }\r\n}\r\n\r\nexport interface OptionState {\r\n    selected: boolean,\r\n    disabled: boolean,\r\n    title: string,\r\n    id: string\r\n}\r\n\r\n\r\nconst getUsedTaxonomies = (parts: ReleaseNotePart[], existing: { [key: string]: Set<string> } = {}): { [key: string]: Set<string> } => {\r\n    parts.forEach(part => {\r\n        if (part.taxonomies && typeof part.taxonomies !== 'string') {\r\n            Object.keys(part.taxonomies).forEach((taxonomy) => {\r\n                const options: string[] = (part.taxonomies as { [key: string]: string[] })[taxonomy];\r\n                options.forEach((option) => {\r\n                    if (!existing[taxonomy]) {\r\n                        existing[taxonomy] = new Set();\r\n                    }\r\n                    existing[taxonomy].add(option);\r\n                });\r\n            });\r\n        }\r\n        if (!!part.content_parts) {\r\n            getUsedTaxonomies(part.content_parts, existing);\r\n        }\r\n    });\r\n    return existing;\r\n}\r\n\r\nexport const filtersReducer = (state: FiltersState, action: any): FiltersState => {\r\n    switch (action.type) {\r\n        case \"TOGGLE\": {\r\n            const { taxonomy, option } = action.payload;\r\n            if (typeof state[taxonomy].options[option].selected !== 'boolean') {\r\n                return state;\r\n            }\r\n            const copyOfFilters = JSON.parse(JSON.stringify(state));\r\n            copyOfFilters[taxonomy].options[option].selected = !state[taxonomy].options[option].selected;\r\n            return copyOfFilters;\r\n        }\r\n        case \"CLEAR_ALL\": {\r\n            const newFiltersState: FiltersState = {};\r\n\r\n            Object.keys(state).forEach((filterKey) => {\r\n                const thisFilter = state[filterKey];\r\n                const { options } = { ...thisFilter };\r\n\r\n                Object.keys(options).forEach((optionKey: string) => {\r\n                    options[optionKey].selected = false;\r\n                });\r\n\r\n                newFiltersState[filterKey] = {\r\n                    ...thisFilter,\r\n                    options\r\n                };\r\n            });\r\n\r\n            return newFiltersState;\r\n        }\r\n        case \"CLEAR_SELECTED\": {\r\n            const taxonomy = action.payload;\r\n            const { options } = state[taxonomy];\r\n            Object.keys(options).forEach((optionKey: string) => {\r\n                options[optionKey].selected = false;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                [taxonomy]: {\r\n                    ...state[taxonomy],\r\n                    options\r\n                }\r\n            };\r\n        }\r\n        case \"CLEAR_ALL_SELECTED\": {\r\n            return Object.fromEntries(\r\n                Object.keys(state).map((taxonomy) => {\r\n                    const { options } = state[taxonomy];\r\n                    Object.keys(options).forEach((optionKey: string) => {\r\n                        options[optionKey].selected = false;\r\n                    });\r\n                    return [taxonomy, { ...state[taxonomy], options }]\r\n                })\r\n            );\r\n        }\r\n        case \"DISABLE_UNUSED\": {\r\n            const usedTaxonomies = getUsedTaxonomies(action.payload);\r\n\r\n            const newFiltersState: FiltersState = {};\r\n\r\n            Object.keys(state).forEach((filterKey) => {\r\n                const thisFilter = state[filterKey];\r\n                const { options } = { ...thisFilter };\r\n\r\n                Object.keys(options).forEach((optionKey: string) => {\r\n                    options[optionKey].disabled = !Boolean(usedTaxonomies[filterKey]?.has(optionKey));\r\n                });\r\n                newFiltersState[filterKey] = {\r\n                    ...thisFilter,\r\n                    options\r\n                };\r\n            });\r\n\r\n            return newFiltersState;\r\n        }\r\n        case \"SET\": {\r\n            return action.payload;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const FiltersContextProvider: FunctionComponent<{ release?: ReleaseNoteResponseModel }> = ({ release, children }) => {\r\n    const [filters, dispatch] = useReducer(filtersReducer, {});\r\n\r\n    const displayFilters = useMemo<boolean>(() => {\r\n        if (Object.keys(filters).length < 1) {\r\n            return false;\r\n        }\r\n        const indexOfFirstFilterWithOptions = Object.keys(filters).findIndex((key) => {\r\n            const { options } = filters[key];\r\n            return Object.keys(options).length > 0\r\n        });\r\n        return indexOfFirstFilterWithOptions !== -1;\r\n    }, [filters]);\r\n\r\n    const appContext = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        if (!appContext.state.taxonomies) {\r\n            return;\r\n        }\r\n        const { taxonomies } = appContext.state.taxonomies;\r\n        const newFiltersState: FiltersState = {};\r\n\r\n        taxonomies.forEach((taxonomy) => {\r\n            newFiltersState[taxonomy.id] = {\r\n                title: taxonomy.title,\r\n                id: taxonomy.id,\r\n                pills: Boolean(taxonomy.pills),\r\n                options: {}\r\n            };\r\n            taxonomy.options.forEach((option) => {\r\n                newFiltersState[taxonomy.id].options[option.id] = {\r\n                    title: option.title,\r\n                    id: option.id,\r\n                    selected: false,\r\n                    disabled: false\r\n                }\r\n            });\r\n        })\r\n        dispatch({ type: 'SET', payload: newFiltersState });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [appContext.state.taxonomies, dispatch]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!release) {\r\n            return;\r\n        }\r\n        dispatch({ type: 'DISABLE_UNUSED', payload: release.content_parts });\r\n    }, [dispatch, release]);\r\n\r\n    const toggleFilter = (taxonomy: string, option: string): void => {\r\n        dispatch({ type: 'TOGGLE', payload: { taxonomy, option } });\r\n    };\r\n\r\n    const clearSelected = (taxonomy: string) => {\r\n        if (!taxonomy) {\r\n            dispatch({ type: 'CLEAR_ALL_SELECTED' });\r\n        } else {\r\n            dispatch({ type: 'CLEAR_SELECTED', payload: taxonomy });\r\n        }\r\n    };\r\n\r\n    const clearAll = () => {\r\n        dispatch({ type: 'CLEAR_ALL' });\r\n    }\r\n\r\n    const overwrite = (state: FiltersState) => {\r\n        dispatch({ type: 'SET', payload: state });\r\n    }\r\n\r\n    const selected = useMemo(() => {\r\n        const selected: { [key: string]: string[] } = {};\r\n        Object.keys(filters)\r\n            .forEach((key) => {\r\n                const options = filters[key].options;\r\n                const selectedOptions = Object.keys(options)\r\n                    .map((key2) => options[key2])\r\n                    .filter((option) => option && option.selected)\r\n                    .map(({ id }) => id);\r\n\r\n                if (selectedOptions.length > 0) {\r\n                    selected[key] = selectedOptions;\r\n                }\r\n            });\r\n        const length = Object.keys(selected).reduce((prev, current) => prev + selected[current].length, 0);\r\n        const shouldCheckFilters = Object.keys(selected).filter(key => key !== '_type').length > 0;\r\n        return { length, shouldCheckFilters, filters: selected };\r\n    }, [filters]);\r\n\r\n    return <FiltersContext.Provider value={{ filters, toggleFilter, selected, clearSelected, clearAll, displayFilters, overwrite }}>\r\n        {children}\r\n    </FiltersContext.Provider>;\r\n}","import { FunctionComponent, useCallback, useContext, useMemo, useRef } from \"react\";\r\nimport Button from 'carbon-react/lib/components/button';\r\nimport { ButtonWithForwardRef } from 'carbon-react/lib/components/button/button.component';\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport { HideOnPrint } from '../styles/print';\r\nimport { SidebarContext } from \"../context/Sidebar.context\";\r\nimport { FiltersContext } from \"../context/Filters.context\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrap = styled(HideOnPrint)`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    button {\r\n        flex: 1;\r\n    }\r\n    @media screen and (max-width: 390px) {\r\n        flex-direction: column;\r\n        button ~ button {\r\n            margin: .5rem 0 0!important;\r\n        }\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        justify-content: flex-end;\r\n        button {\r\n            flex: 0 0 auto;\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport const ActionButtons: FunctionComponent = () => {\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const { filters } = useContext(FiltersContext);\r\n    const filtersButtonRef = useRef<HTMLButtonElement | undefined>(undefined);\r\n\r\n    const t = useLabels();\r\n\r\n    const printScreen = useCallback((ev: any) => {\r\n        (ev as MouseEvent).preventDefault();\r\n        window.print();\r\n    }, []);\r\n\r\n    // Filtered the filters into just the selected ones\r\n    const selectedFilters = useMemo(() => {\r\n        let selected = 0;\r\n        Object.keys(filters)\r\n            .forEach((key) => {\r\n                const options = filters[key].options;\r\n                const selectedOptions = Object.keys(options)\r\n                    .map((key2) => options[key2])\r\n                    .filter((option) => option && option.selected)\r\n                    .map(({ id }) => id);\r\n\r\n                if (selectedOptions.length > 0) {\r\n                    selected += selectedOptions.length;\r\n                }\r\n            });\r\n        return selected;\r\n    }, [filters]);\r\n\r\n    const openSidebar = () => {\r\n        sidebarContext.open(filtersButtonRef.current);\r\n    };\r\n\r\n    return <ButtonWrap>\r\n        {/* @ts-expect-error */}\r\n        <Button noWrap buttonType=\"secondary\" iconType=\"print\" type=\"button\" onClick={printScreen}>{t('buttons.print')}</Button>\r\n        <ButtonWithForwardRef noWrap buttonType=\"primary\" iconType=\"filter\" onClick={openSidebar} ref={filtersButtonRef}>\r\n            {t('buttons.filters')} {selectedFilters > 0 && `(${selectedFilters})`}\r\n        </ButtonWithForwardRef>\r\n    </ButtonWrap>;\r\n}","import { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport Typography from 'carbon-react/lib/components/typography';\r\nimport { ActionButtons } from './ActionButtons';\r\n\r\nconst ReleaseNoteTitleBar = styled.div`\r\n    margin: 2rem 0 1.5rem;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        margin: 2.5rem 0 1.5rem;\r\n    }\r\n`;\r\n\r\nexport const ReleaseNoteTitle: FunctionComponent<{ title: string, productName?: string }> = ({ title, productName }) => {\r\n    const t = useLabels();\r\n    return <ReleaseNoteTitleBar>\r\n        {/* @ts-expect-error */}\r\n        {productName && <Typography fontSize=\"20px\" lineHeight=\"25px\" mb={0} as=\"h1\" fontWeight=\"700\">{t('subtitle.prefix')} {productName}</Typography>}\r\n        {/* @ts-expect-error */}\r\n        <Typography variant=\"h1\" as=\"h2\" fontSize=\"32px\" lineHeight=\"40px\" fontWeight=\"700\" mb={3}>\r\n            {title}\r\n        </Typography>\r\n        <ActionButtons />\r\n    </ReleaseNoteTitleBar>;\r\n}","import { FunctionComponent } from \"react\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\nexport const TextContent: FunctionComponent<{content: string}> = ({content}) => {\r\n    return <div className=\"text-content\" dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(content, { ADD_ATTR: ['target'] }) }}></div>;\r\n}","import { FunctionComponent } from \"react\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { Accordion } from \"carbon-react/lib/components/accordion\"\r\nimport styled from 'styled-components';\r\n\r\nconst AccordionContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    >:last-child{\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const AccordionPart: FunctionComponent<{ title: string, content: string }> = ({ title, content }) => {\r\n    // @ts-expect-error\r\n    return <Accordion\r\n        size=\"small\"\r\n        iconAlign=\"left\"\r\n        title={title}\r\n    >\r\n        <AccordionContent\r\n            className=\"text-content\"\r\n            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(content, { ADD_ATTR: ['target'] }) }}\r\n        />\r\n    </Accordion>;\r\n}","import { keyframes } from \"styled-components\";\r\n\r\nexport const flashFocusState = keyframes`\r\n0% {\r\n    outline-color: #FFB500FF;\r\n}\r\n66% {\r\n    outline-color: #FFB500FF;\r\n}\r\n100% {\r\n    outline-color: #FFB50000;\r\n}\r\n`;","import { FunctionComponent, useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ModuleContext } from \"../context/Modules.context\";\r\nimport { ModulePartModel } from \"../models\";\r\nimport { TextContent } from \"./TextContent\";\r\nimport { ContentParts } from \"./ContentParts\";\r\nimport { flashFocusState } from '../styles/animations';\r\nimport Tile from \"carbon-react/lib/components/tile\";\r\nimport Content from \"carbon-react/lib/components/content\";\r\nimport Typography from \"carbon-react/lib/components/typography\";\r\nexport interface ModuleModel {\r\n    title: string;\r\n    id: string;\r\n    ref: React.MutableRefObject<HTMLElement>;\r\n}\r\n\r\nconst ModuleSection = styled.section`\r\n    display: block;\r\n    margin: 1.5rem -1rem;\r\n    outline: none;\r\n    @media screen and (max-width: ${({ theme }) => theme.breakpoints.mobile.max}) {\\\r\n        > [data-component=\"tile\"] {\r\n            border-left: none;\r\n            border-right: none;\r\n        }\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        margin: 2.5rem 0;\r\n    }\r\n    &:focus-visible{\r\n        outline: solid 3px #FFB50000;\r\n        animation: ${flashFocusState} 2s linear;\r\n    }\r\n`;\r\n\r\nconst ModuleHeading = styled.h2`\r\n    margin: 0 -.5rem 1rem;\r\n    padding: 0 .5rem .5rem;\r\n    position: sticky;\r\n    top: var(--header-height, 3rem);\r\n    z-index: 99;\r\n    background: #fff;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        margin: 0 -.5rem 1.5rem;\r\n    }\r\n`;\r\n\r\nexport const ModulePart: FunctionComponent<{ part: ModulePartModel }> = ({ part }) => {\r\n\r\n    const { addModule } = useContext(ModuleContext);\r\n    const moduleRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        addModule({\r\n            title: part.title ?? '',\r\n            id: part.id,\r\n            ref: moduleRef\r\n        })\r\n    }, [addModule, moduleRef, part]);\r\n\r\n    return <ModuleSection id={part.id} ref={moduleRef} tabIndex={-1} aria-label={part.title}>\r\n        <Tile>\r\n            <Content>\r\n                {/* @ts-expect-error */}\r\n                {part.title && <ModuleHeading><Typography fontSize=\"24px\" lineHeight=\"30px\" as=\"h2\" mb={0} fontWeight=\"700\">{part.title}</Typography></ModuleHeading>}\r\n                {\r\n                    part.content_parts && part.content_parts.length > 0 ?\r\n                        <ContentParts parts={part.content_parts} /> :\r\n                        <TextContent content={part.content ?? ''} />\r\n                }\r\n            </Content>\r\n        </Tile>\r\n    </ModuleSection>;\r\n}","function IDify(input: string): string {\r\n    return input.replace(/\\W/g, '_');\r\n}\r\n\r\nexport default IDify;\r\n","import { FunctionComponent, useMemo, useCallback, useContext, ReactComponentElement } from \"react\";\r\nimport Pill from 'carbon-react/lib/components/pill';\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport IDify from \"../utils/IDify\";\r\nimport Typography from \"carbon-react/lib/components/typography\";\r\nimport Hr from \"carbon-react/lib/components/hr\";\r\nimport { FiltersContext } from \"../context/Filters.context\";\r\nimport { TaxonomiesModel, TaxonomiesOptionModel } from \"../models\";\r\n\r\ninterface ComponentProps {\r\n    id?: string;\r\n    highlight?: boolean;\r\n    title?: string;\r\n    group?: boolean;\r\n    taxonomies?: 'all' | {\r\n        [taxonomy: string]: string[]\r\n    }\r\n}\r\n\r\nconst TitlePartDiv = styled.div`\r\n    margin-bottom: 24px;\r\n    hr {\r\n        display: none;\r\n    }\r\n    & + & hr{\r\n        display: block;\r\n    }\r\n`\r\n\r\nconst PillsWrap = styled.div`\r\n    gap: .5rem;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    margin: -1rem 0 1rem;\r\n`;\r\n\r\nexport const TitledPart: FunctionComponent<ComponentProps> = ({ id, highlight, title, taxonomies, children, group = false }) => {\r\n\r\n    const appContext = useContext(AppContext);\r\n\r\n    const filtersContext = useContext(FiltersContext);\r\n\r\n    const showTaxonomyAsPill = useCallback((taxonomy: TaxonomiesModel, option: TaxonomiesOptionModel | undefined) => {\r\n        // If anything is null, or pills are disabled for this tax, or there is no title available\r\n        // Then dont show\r\n        if (!taxonomy || !option || taxonomy?.pills === false || !option.title) {\r\n            return false;\r\n        }\r\n\r\n        // If no selected, or just _type selected, then show\r\n        if (!filtersContext.selected.shouldCheckFilters) {\r\n            return true;\r\n        }\r\n\r\n        // tax and opt both exist\r\n        // there would be a pill showing\r\n        // BUT there is something selected\r\n        if (!filtersContext.selected.filters[taxonomy.id]) {\r\n            // Don't show because not selected\r\n            return false;\r\n        }\r\n\r\n        return filtersContext.selected.filters[taxonomy.id].includes(option.id);\r\n    }, [filtersContext.selected]);\r\n\r\n    const taxPills = useMemo(() => {\r\n        if (!taxonomies || taxonomies === 'all') {\r\n            return null;\r\n        }\r\n        const output: any[] = [];\r\n        Object.keys(taxonomies)\r\n            .forEach((taxonomy, i) => {\r\n                if (!taxonomies[taxonomy] || taxonomies[taxonomy].length < 1) {\r\n                    return;\r\n                }\r\n                const fullTax = appContext.state.taxonomies?.taxonomies.find((thisTax) => thisTax.id === taxonomy);\r\n                if (!fullTax) {\r\n                    return;\r\n                }\r\n                return taxonomies[taxonomy]\r\n                    .map((option) => fullTax?.options.find((thisOption) => thisOption.id === option))\r\n                    .filter((option) => showTaxonomyAsPill(fullTax, option))\r\n                    .forEach((option, j) => {\r\n                        if (!option) {\r\n                            return\r\n                        }\r\n                        const { title, color } = option;\r\n                        output.push(<Pill\r\n                            key={`${i}-${j}`}\r\n                            pillRole=\"status\"\r\n                            borderColor={color}\r\n                        >\r\n                            {title}\r\n                        </Pill>);\r\n                    })\r\n            });\r\n        return output;\r\n    }, [appContext.state.taxonomies, taxonomies, showTaxonomyAsPill]);\r\n\r\n    const showTaxonomies = useMemo(\r\n        () => taxonomies && Object.keys(taxonomies).length > 0 && taxonomies !== 'all' && taxPills && taxPills.length > 0,\r\n        [taxonomies, taxPills]\r\n    );\r\n\r\n    const headingId = useMemo(() => {\r\n        if (id) {\r\n            return id;\r\n        }\r\n        if (highlight && title) {\r\n            return IDify(title);\r\n        }\r\n        return undefined;\r\n    }, [id, title, highlight]);\r\n\r\n    const headingProps = group ? {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        lineHeight: \"1.5\",\r\n        textTransform: \"uppercase\",\r\n        as: \"h3\",\r\n        mb: 3,\r\n        color: \"rgba(0, 0, 0, 0.55)\"\r\n    } : {\r\n        fontSize: \"20px\",\r\n        fontWeight: \"700\",\r\n        lineHeight: \"1.25\",\r\n        mb: 3,\r\n        as: \"h4\",\r\n    }\r\n\r\n    return <TitlePartDiv id={headingId}>\r\n        {group && <Hr />}\r\n        {title && <Typography {...headingProps}>{title}</Typography>}\r\n        {showTaxonomies && <PillsWrap>{taxPills}</PillsWrap>}\r\n        {children}\r\n    </TitlePartDiv>\r\n}","import { createContext, FunctionComponent } from \"react\";\r\nimport { ReleaseNoteResponseModel } from '../models';\r\n\r\nexport const ReleaseContext = createContext<ReleaseNoteResponseModel | null>(null);\r\n\r\nexport const ReleaseContextProvider: FunctionComponent<{ release: ReleaseNoteResponseModel }> = ({ release, children }) => {\r\n    return <ReleaseContext.Provider value={release}>{children}</ReleaseContext.Provider>\r\n}","import { useCallback } from \"react\";\r\n\r\nconst useShowPart = (selectedFilters: {\r\n    [key: string]: string[];\r\n}): (taxonomies?: 'all' | { [taxonomy: string]: string[] }) => boolean => {\r\n    // Method for if a method should be shown based on the taxonomies for that part.\r\n    return useCallback((taxonomies?: 'all' | { [taxonomy: string]: string[] }) => {\r\n\r\n        if (taxonomies === 'all') {\r\n            return true;\r\n        }\r\n        const selectedFiltersKeys = Object.keys(selectedFilters);\r\n\r\n        // Check if a \"_type\" is selected\r\n        const typeIndex = selectedFiltersKeys.findIndex((item) => item === '_type');\r\n        if (typeIndex > -1) {\r\n            if (taxonomies && taxonomies['_type']) {\r\n                for (let i = 0; i < selectedFilters['_type'].length; i++) {\r\n                    const thisOption = selectedFilters['_type'][i];\r\n                    console.log(thisOption, taxonomies['_type']);\r\n                    // If a match exists then it will continue on the outer loop to check the other taxonomies that are selected\r\n                    if (taxonomies['_type'].includes(thisOption)) {\r\n                        return true;\r\n                    };\r\n                }\r\n                return false;\r\n            }\r\n            // Remove type from the taxonomy list\r\n            selectedFiltersKeys.splice(typeIndex, 1);\r\n        }\r\n\r\n        // If no filters are added to this item\r\n        if (!taxonomies) {\r\n            return false;\r\n        }\r\n        \r\n        if (selectedFiltersKeys.length < 1) {\r\n            return true;\r\n        }\r\n\r\n        if (Object.keys(taxonomies).filter(key => key !== '_type').length === 0) {\r\n            return true;\r\n        }\r\n\r\n        // Outer loop label is used to skip back to this for loop\r\n        outerLoop: for (let index = 0; index < selectedFiltersKeys.length; index++) {\r\n            const thisKey = selectedFiltersKeys[index];\r\n\r\n            // If a taxonomy is selected, but doesn't exist on this element, then don't show\r\n            if (!taxonomies[thisKey] || taxonomies[thisKey].length < 0) {\r\n                // unless it's \"_type\"\r\n                return thisKey === \"_type\";\r\n            }\r\n\r\n            // If a taxonomy exists then loop through the selected options and check that at least one match exists\r\n            for (let index2 = 0; index2 < selectedFilters[thisKey].length; index2++) {\r\n                const thisOption = selectedFilters[thisKey][index2];\r\n\r\n                // If a match exists then it will continue on the outer loop to check the other taxonomies that are selected\r\n                if (taxonomies[thisKey].includes(thisOption)) {\r\n                    continue outerLoop;\r\n                };\r\n            }\r\n\r\n            // If it gets to here then a selected taxonomy is not present on this component\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }, [selectedFilters]);\r\n}\r\nexport default useShowPart;","import { FunctionComponent, useContext, useMemo, useCallback } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem\r\n} from \"carbon-react/lib/components/typography\";\r\nimport Link from 'carbon-react/lib/components/link';\r\nimport { ReleaseContext } from \"../context/Release.context\";\r\nimport { ReleaseNotePart } from \"../models\";\r\nimport IDify from \"../utils/IDify\";\r\nimport usePrefersReducedMotion from \"../utils/usePrefersReducedMotion\";\r\nimport { FiltersContext } from \"../context/Filters.context\";\r\nimport useShowPart from '../utils/useShowPart';\r\n\r\nexport const Highlights: FunctionComponent = () => {\r\n    const release = useContext(ReleaseContext);\r\n    const filtersContext = useContext(FiltersContext);\r\n    const prefersReducedMotion = usePrefersReducedMotion();\r\n    const showPart = useShowPart(filtersContext.selected.filters);\r\n\r\n    const parts = useMemo(() => {\r\n        if (!release) {\r\n            return []\r\n        }\r\n        const output: ReleaseNotePart[] = [];\r\n        const addParts = (theseParts: ReleaseNotePart[]) => {\r\n            theseParts.forEach((thisPart) => {\r\n                if (thisPart.highlight && thisPart.title && showPart(thisPart.taxonomies)) {\r\n                    const id = thisPart.id ?? IDify(thisPart.title);\r\n                    output.push({ id, title: thisPart.title, taxonomies: thisPart.taxonomies })\r\n                }\r\n                if (thisPart.content_parts && thisPart.content_parts.length > 0) {\r\n                    addParts(thisPart.content_parts);\r\n                }\r\n            });\r\n        }\r\n        addParts(release.content_parts);\r\n\r\n        if (!filtersContext.selected.shouldCheckFilters) {\r\n            return output;\r\n        }\r\n\r\n        return output.filter(({ taxonomies }) => showPart(taxonomies));\r\n\r\n    }, [release, showPart, filtersContext.selected.shouldCheckFilters]);\r\n\r\n    const scrollIntoView = useCallback((element: HTMLElement): void => {\r\n        window.scroll({\r\n            top: element.getBoundingClientRect().top + window.pageYOffset - 90,\r\n            behavior: prefersReducedMotion ? \"auto\" : \"smooth\"\r\n        });\r\n        element.focus({ preventScroll: true });\r\n    }, [prefersReducedMotion]);\r\n\r\n    const handleClick = useCallback(\r\n        (id: string) => {\r\n            return (event: MouseEvent) => {\r\n                event.preventDefault();\r\n                const ele = document.getElementById(id);\r\n                if (ele) {\r\n                    scrollIntoView(ele);\r\n                }\r\n            }\r\n        },\r\n        [scrollIntoView],\r\n    );\r\n\r\n    if (!release || parts.length < 1) {\r\n        return null;\r\n    }\r\n\r\n    return <List mb=\"21\">\r\n        {parts.map(({ id, title }) => <ListItem mb={0} key={id}>\r\n            {/* @ts-expect-error */}\r\n            <Link onClick={handleClick(id)} href={`#${id}`}>{title}</Link>\r\n        </ListItem>)}\r\n    </List >\r\n}","import { FunctionComponent, useContext, useEffect, useRef } from \"react\";\r\nimport { ModuleContext } from \"../context/Modules.context\";\r\nimport { IntroPartModel } from '../models';\r\nimport { TextContent } from \"./TextContent\";\r\nimport { Highlights } from \"./Highlights\";\r\nimport { flashFocusState } from '../styles/animations';\r\nimport styled from 'styled-components';\r\n\r\nconst ModuleSection = styled.section`\r\n    display: block;\r\n    margin: 0 0 1.5rem;\r\n    outline: none;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        margin: 0 0 2.5rem;\r\n    }\r\n    &:focus-visible{\r\n        outline: solid 3px #FFB50000;\r\n        animation: ${flashFocusState} 2s linear;\r\n    }\r\n`;\r\n\r\nexport const IntroPart: FunctionComponent<{ part: IntroPartModel }> = ({ part }) => {\r\n    const { addModule } = useContext(ModuleContext);\r\n    const moduleRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        addModule({\r\n            title: part.title ?? '',\r\n            id: part.id,\r\n            ref: moduleRef\r\n        })\r\n    }, [addModule, moduleRef, part]);\r\n\r\n    return <ModuleSection id={part.id} ref={moduleRef} tabIndex={-1} aria-label={part.title}>\r\n        <TextContent content={part.content ?? ''} />\r\n        <Highlights />\r\n    </ModuleSection>\r\n}","import { FunctionComponent, useContext, useMemo } from \"react\";\r\nimport { isAccordion, isModule, ReleaseNotePart, isIntro, isGroup } from '../models';\r\n\r\nimport { TextContent } from \"./TextContent\";\r\nimport { AccordionPart } from \"./AccordionPart\";\r\nimport { ModulePart } from './ModulePart';\r\nimport { TitledPart } from './TitledPart';\r\nimport { IntroPart } from './IntroPart';\r\nimport { FiltersContext } from \"../context/Filters.context\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\n\r\nimport useShowPart from '../utils/useShowPart';\r\n\r\nexport const ContentParts: FunctionComponent<{ parts?: ReleaseNotePart[] }> = ({ parts }) => {\r\n\r\n    const context = useContext(FiltersContext);\r\n    const t = useLabels();\r\n    const showPart = useShowPart(context.selected.filters);\r\n\r\n    // Turned the component parts to the correct element. Also filters the fields based on selected fields.\r\n    // Memoized for performance\r\n    const mappedParts = useMemo(() => {\r\n        if (!parts) {\r\n            return null;\r\n        }\r\n\r\n        const filteredParts = parts.map((part, index) => {\r\n\r\n            if (isIntro(part)) {\r\n                return <IntroPart key={index} part={part} />;\r\n            }\r\n\r\n            if (isModule(part)) {\r\n                return <ModulePart key={index} part={part} />;\r\n            }\r\n\r\n            if (isAccordion(part)) {\r\n                return showPart(part.taxonomies) && <AccordionPart title={part.title} content={part.content} key={index} />;\r\n            }\r\n\r\n            if (isGroup(part)) {\r\n                return showPart(part.taxonomies) && <TitledPart group id={part.id} highlight={part.highlight} title={part.title} taxonomies={part.taxonomies} key={index}>\r\n                    <ContentParts parts={part.content_parts} />\r\n                </TitledPart>;\r\n            }\r\n\r\n            if (!!part.content) {\r\n                return showPart(part.taxonomies) && <TitledPart id={part.id} highlight={part.highlight} title={part.title} taxonomies={part.taxonomies} key={index}>\r\n                    <TextContent content={part.content} />\r\n                </TitledPart>;\r\n            }\r\n\r\n            if (part.content_parts && part.content_parts.length > 0) {\r\n                return showPart(part.taxonomies) && <TitledPart id={part.id} highlight={part.highlight} title={part.title} taxonomies={part.taxonomies} key={index}>\r\n                    <ContentParts parts={part.content_parts} />\r\n                </TitledPart>;\r\n            }\r\n\r\n            return null;\r\n        }).filter(item => item !== false);\r\n\r\n        // Check how many have been filtered\r\n        if (filteredParts.length === 0 && parts.length > 0) {\r\n            return <p>{t('messages.all-parts-filtered')}</p>;\r\n        }\r\n\r\n        return filteredParts;\r\n\r\n    }, [parts, showPart, t]);\r\n\r\n    return <>\r\n        {mappedParts}\r\n    </>;\r\n}","export interface APIResponse {\r\n    __self: string;\r\n}\r\n\r\nexport interface ArchiveResponseModel extends APIResponse {\r\n    product: string;\r\n    language: string;\r\n    alternative_langauges: AlternativeLanguageModel[],\r\n    taxonomies: string,\r\n    releases: ReleaseModel[];\r\n    labels: string,\r\n}\r\n\r\nexport interface AlternativeLanguageModel {\r\n    id: string;\r\n    url: string;\r\n    title: string;\r\n}\r\nexport interface ReleaseModel {\r\n    id: string;\r\n    url: string;\r\n    title: string;\r\n    date: string;\r\n}\r\n\r\nexport interface ReleaseNoteResponseModel extends APIResponse {\r\n    id: string;\r\n    title: string;\r\n    date: string;\r\n    language: string;\r\n    next?: string;\r\n    previous?: string;\r\n    content_parts: ReleaseNotePart[];\r\n}\r\nexport interface ReleaseNotePart {\r\n    id?: string;\r\n    title?: string;\r\n    content?: string;\r\n    type?: string;\r\n    highlight?: boolean;\r\n    taxonomies?: 'all' | {\r\n        [taxonomy: string]: string[]\r\n    };\r\n    tags?: string[];\r\n    content_parts?: ReleaseNotePart[];\r\n}\r\n\r\nexport interface TaxonomiesResponseModel extends APIResponse {\r\n    taxonomies: TaxonomiesModel[];\r\n}\r\n\r\nexport interface TaxonomiesModel {\r\n    id: string;\r\n    title: string;\r\n    pills?: boolean;\r\n    options: TaxonomiesOptionModel[];\r\n}\r\n\r\nexport interface TaxonomiesOptionModel {\r\n    id: string;\r\n    title: string;\r\n    color?: string;\r\n}\r\n\r\nexport interface AppOptions {\r\n    archiveUrl: string;\r\n    showHeader?: boolean;\r\n    routingStrategy?: RoutingStrategy;\r\n    defaultToArchive?: boolean;\r\n    currentReleaseNote?: string;\r\n    setPageTitle?: boolean;\r\n    productName?: string;\r\n    alwaysDisplayAnchorNav?: boolean;\r\n}\r\n\r\nexport type RoutingStrategy = 'hash' | 'memory' | 'browser';\r\n\r\nexport interface ModulePartModel extends ReleaseNotePart {\r\n    type: 'module';\r\n    id: string;\r\n}\r\n\r\nexport function isModule(input: ReleaseNotePart): input is ModulePartModel {\r\n    return (input as ModulePartModel).type === 'module' && !!(input as ModulePartModel).id;\r\n}\r\n\r\nexport interface IntroPartModel extends ReleaseNotePart {\r\n    type: 'intro';\r\n    id: string;\r\n    content: string;\r\n}\r\n\r\nexport function isIntro(input: ReleaseNotePart): input is IntroPartModel {\r\n    return (input as IntroPartModel).type === 'intro' && !!(input as IntroPartModel).id;\r\n}\r\n\r\nexport interface AccordionPartModel extends ReleaseNotePart {\r\n    type: 'accordion';\r\n    content: string;\r\n    title: string;\r\n}\r\n\r\nexport function isAccordion(input: ReleaseNotePart): input is AccordionPartModel {\r\n    return (input as AccordionPartModel).type === 'accordion'\r\n        && !!input.content\r\n        && !!input.title;\r\n}\r\n\r\nexport interface GroupPartModel extends ReleaseNotePart {\r\n    type: 'group';\r\n    title: string;\r\n    content_parts: ReleaseNotePart[];\r\n}\r\n\r\nexport function isGroup(input: ReleaseNotePart): input is GroupPartModel {\r\n    return (input as GroupPartModel).type === 'group'\r\n        && !input.content\r\n        && !!input.title;\r\n}","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { ReleaseNoteResponseModel } from \"../models\";\r\n\r\nimport { ContentParts } from './ContentParts';\r\nimport { ModuleContext } from \"../context/Modules.context\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FiltersContext } from \"../context/Filters.context\";\r\n\r\nimport { ReleaseContextProvider } from '../context/Release.context';\r\n\r\nconst flashFocusState = keyframes`\r\n    0% {\r\n        outline-color: #FFB500FF;\r\n    }\r\n    66% {\r\n        outline-color: #FFB500FF;\r\n    }\r\n    100% {\r\n        outline-color: #FFB50000;\r\n    }\r\n`;\r\n\r\nconst ReleaseNoteArticle = styled.article`\r\n    line-height: 1.5;\r\n    color: rgba(0,0,0,0.9);\r\n    outline: none;\r\n    &:focus-visible{\r\n        outline: solid 3px #FFB50000;\r\n        animation: ${flashFocusState} 2s linear;\r\n    }\r\n`;\r\n\r\nexport const ReleaseNoteContent: FunctionComponent<{ release: ReleaseNoteResponseModel }> = ({ release }) => {\r\n\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const params = useParams();\r\n    const { clearModules } = useContext(ModuleContext);\r\n    const filtersContext = useContext(FiltersContext);\r\n\r\n    useEffect(() => {\r\n        filtersContext?.clearAll();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [release]);\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            setFirst(false)\r\n        } else {\r\n            clearModules();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [params, setFirst]);\r\n\r\n\r\n    return <ReleaseNoteArticle id=\"release-note\" tabIndex={-1}>\r\n        <ReleaseContextProvider release={release}>\r\n            <ContentParts parts={release.content_parts} />\r\n        </ReleaseContextProvider>\r\n    </ReleaseNoteArticle>;\r\n}","import { FunctionComponent, useCallback, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Link from 'carbon-react/lib/components/link';\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LinkWrap = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width:36rem;\r\n`;\r\n\r\nexport const MissingRelease: FunctionComponent = () => {\r\n    const { state } = useContext(AppContext);\r\n    let { language } = useParams<{ language: string, version: string }>();\r\n    const t = useLabels();\r\n\r\n    const history = useHistory();\r\n\r\n    const goBack = useCallback(() => {\r\n        history.goBack()\r\n    }, [history]);\r\n\r\n    const goToLatest = useCallback(() => {\r\n        const release = state?.archive?.releases[0].id;\r\n        history.push(`/release/${language}/${release}`);\r\n    }, [history, state, language])\r\n\r\n    return <div className=\"text-content\">\r\n        <p>{t('messages.not-found')}</p>\r\n        <LinkWrap>\r\n            <Link onClick={goBack} icon=\"arrow_left\" iconAlign=\"left\">{t('links.go-back')}</Link>\r\n            <Link onClick={goToLatest}>{t('links.view-latest')}</Link>\r\n        </LinkWrap>\r\n    </div>;\r\n}","import { FunctionComponent } from \"react\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport styled from 'styled-components';\r\n\r\nconst H1 = styled.h1`\r\n    font-weight: 900;\r\n    font-size: 1.375rem;\r\n    line-height: 1.75rem;\r\n    margin: 1rem 0 1.5rem;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        margin: 0 0 2rem;\r\n    }\r\n    \r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        font-size: 2rem;\r\n        line-height: 1.25;\r\n        margin: 2.5rem 0 2.5rem;\r\n    }\r\n`;\r\n\r\nexport const MissingReleaseTitle: FunctionComponent = () => {\r\n    const t = useLabels();\r\n    return <H1>{t('titles.not-found')}</H1>\r\n}","// import Button from \"carbon-react/lib/components/button\";\r\nimport Link from \"carbon-react/lib/components/link\";\r\nimport { FunctionComponent, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\ninterface ComponentProps {\r\n    next?: string;\r\n    previous?: string;\r\n}\r\n\r\nconst PaginationWrap = styled.div`\r\n    display: flex;\r\n    >[data-component=\"link\"] + [data-component=\"link\"] {\r\n        margin-left: 1rem;\r\n    }\r\n`;\r\n\r\nexport const Pagination: FunctionComponent<ComponentProps> = ({ next, previous }) => {\r\n    const { language } = useParams<{ language: string, version: string }>();\r\n    const history = useHistory();\r\n    const t = useLabels();\r\n\r\n    const navigateTo = useCallback(\r\n        (versionId: string) => {\r\n            window.scrollTo({ top: 0, behavior: 'smooth' })\r\n            history.push(`/release/${language}/${versionId}`);\r\n        },\r\n        [history, language]\r\n    );\r\n\r\n    return <PaginationWrap>\r\n        {previous && <Link href={`#/release/${language}/${previous}`} onClick={() => navigateTo(previous)} icon=\"arrow_left\" iconAlign=\"left\">{t('buttons.previous')}</Link>}\r\n        {next && <Link href={`#/release/${language}/${next}`} onClick={() => navigateTo(next)} icon=\"arrow_right\" iconAlign=\"right\">{t('buttons.next')}</Link>}\r\n    </PaginationWrap>;\r\n}","import { FunctionComponent, useContext, SyntheticEvent, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport usePrefersReducedMotion from '../utils/usePrefersReducedMotion';\r\nimport { Pagination } from './Pagination';\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport Link from \"carbon-react/lib/components/link\";\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport theme from \"../theme\";\r\n\r\nconst FooterWrap = styled.footer<{ show: boolean }>`\r\n    padding: 1rem 0;\r\n    bottom: 0;\r\n    z-index: 99;\r\n    background: rgb(242, 245, 246);\r\n    opacity: 0;\r\n    transition: opacity 0.25s linear;\r\n    pointer-events: none;\r\n    width: 100%;\r\n    align-self: end;\r\n    position: sticky;\r\n    bottom: 0;\r\n    ${(props) => props.show && 'opacity: 1; pointer-events: auto;'}\r\n    grid-area: content;\r\n`;\r\n\r\nconst FooterInner = styled.div`\r\n    max-width: ${props => props.theme.containerWidth};\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    @media screen and (min-width: ${ ({theme}) => theme.breakpoints.tablet.min }) {\r\n        padding: 0 1.5rem;\r\n    }\r\n    @media screen and (min-width: ${ ({theme}) => theme.breakpoints.tabletLandscape.min }) {\r\n        padding: 0 2.5rem;\r\n    }\r\n\r\n`;\r\n\r\nexport const ArticleFooter: FunctionComponent = () => {\r\n    const appContext = useContext(AppContext);\r\n    const { options } = appContext;\r\n    const release = appContext.state.data;\r\n    const prefersReducedMotion = usePrefersReducedMotion();\r\n    const t = useLabels();\r\n    const [showFooter, setShowFooter] = useState(false);\r\n    const showPagination = useMediaQuery({ query: `(min-width:${theme.breakpoints.tablet.min})` });\r\n\r\n    useEffect(() => {\r\n        let loop = true;\r\n        const threshhold = (150 - (options.showHeader ? 48 : 0));\r\n        function theLoop() {\r\n            setShowFooter((window.pageYOffset > threshhold));\r\n\r\n            if (loop) {\r\n                requestAnimationFrame(() => theLoop());\r\n            }\r\n        };\r\n\r\n        requestAnimationFrame(() => theLoop());\r\n\r\n        return () => {\r\n            loop = false;\r\n        }\r\n    }, [setShowFooter, options]);\r\n\r\n    if (!release) {\r\n        return null;\r\n    }\r\n\r\n    const handleKeyDown = (event: SyntheticEvent) => {\r\n        const { key } = (event.nativeEvent as KeyboardEvent);\r\n        if (key === ' ' || key === 'Enter') {\r\n            event.preventDefault();\r\n            scrollToTop();\r\n        }\r\n    }\r\n\r\n    const scrollToTop = (_event?: SyntheticEvent) => {\r\n        window.scrollTo({ top: 0, behavior: prefersReducedMotion ? \"auto\" : \"smooth\" });\r\n        document.getElementById(\"release-note\")?.focus({ preventScroll: true });\r\n    };\r\n\r\n    return <FooterWrap show={showFooter} tabIndex={showFooter ? undefined : -1}>\r\n        <FooterInner>\r\n            <Link\r\n                icon=\"arrow_up\"\r\n                onClick={scrollToTop}\r\n                onKeyDown={handleKeyDown}\r\n            >{t('links.back-to-top')}</Link>\r\n\r\n            {showPagination &&\r\n                <Pagination\r\n                    next={release.next}\r\n                    previous={release.previous}\r\n                />}\r\n        </FooterInner>\r\n    </FooterWrap>;\r\n}","import { FunctionComponent } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst CheckboxSvgWrap = styled.div<{ checked: boolean, isDisabled: boolean }>`\r\n    box-sizing: border-box;\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid rgba(0, 0, 0, 0.9);\r\n    background: #fff;\r\n    path{\r\n        fill: transparent;\r\n    }\r\n    svg{\r\n        width: 1rem;\r\n        height: auto;\r\n        display: block;\r\n    }\r\n    ${({checked}) => checked && `\r\n        path {\r\n            fill: rgba(0, 0, 0, 0.9);\r\n        }\r\n    `}\r\n    ${({isDisabled}) => isDisabled && `\r\n        background: #f2f5f6;\r\n        border: 1px solid #ccd6db;\r\n    `}\r\n`;\r\n\r\nexport const CheckboxSvg: FunctionComponent<{ checked: boolean, isDisabled: boolean }> = ({ isDisabled, checked }) => {\r\n    return <CheckboxSvgWrap checked={checked} isDisabled={isDisabled}>\r\n        <svg\r\n            focusable=\"false\"\r\n            width=\"12\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 12 10\"\r\n        >\r\n            <path\r\n                d=\"M.237 6.477A.752.752 0 0 1 .155 5.47l.851-1.092a.63.63 0 0 1 .934-.088l2.697 1.964, 4.674-6a.63.63 0 0 1 .933-.088l1.015.917c.28.254.317.703.081 1.005L6.353 8.492a.725.725, 0 0 1-.095.16l-.85 1.093a.637.637 0 0 1-.626.244.638.638 0 0 1-.335-.16L.237 6.476z\"\r\n                fill=\"#FFFFFF\"\r\n                fillRule=\"evenodd\"\r\n            ></path>\r\n        </svg>\r\n    </CheckboxSvgWrap>;\r\n};","import { FunctionComponent, SyntheticEvent } from \"react\"\r\nimport styled from \"styled-components\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { CheckboxSvg } from \"./CheckboxSvg\";\r\n\r\nexport interface CheckboxProps {\r\n    label: string;\r\n    name: string;\r\n    checked?: boolean;\r\n    id?: string;\r\n    onChange: (event: SyntheticEvent) => void;\r\n    disabled?: boolean;\r\n}\r\n\r\n\r\nconst Input = styled.input`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    margin: 0px;\r\n    ${ ({disabled}) => disabled && `\r\n        cursor: not-allowed;\r\n    `}\r\n`;\r\n\r\nconst StyledInput = styled.div`\r\n    box-sizing: border-box;\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n    position: relative;\r\n    &:hover, &:focus-within {\r\n        box-shadow: rgb(255, 181, 0) 0px 0px 0px 3px;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label<{isDisabled?: boolean}>`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 .75rem;\r\n    ${ ({isDisabled}) => isDisabled && `\r\n        color: rgba(0, 0, 0, 0.3);\r\n        cursor: not-allowed;\r\n        ${StyledInput} {\r\n            box-shadow: none;\r\n        }\r\n    `};\r\n`;\r\n\r\nconst LabelText = styled.span`\r\n    margin-left: .5rem;\r\n    font-size: ${14/16}rem;\r\n    user-select: none;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const Checkbox: FunctionComponent<CheckboxProps> = ({ name, checked, onChange, id, label, disabled }) => {\r\n    return <Label isDisabled={disabled}>\r\n        <StyledInput>\r\n            <Input\r\n                type=\"checkbox\"\r\n                name={name}\r\n                checked={checked}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n                id={id}\r\n            />\r\n            <CheckboxSvg isDisabled={Boolean(disabled)} checked={Boolean(checked)} />\r\n        </StyledInput>\r\n        <LabelText dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(label) }} />\r\n    </Label>;\r\n}","import DOMPurify from \"dompurify\";\r\nimport { FunctionComponent, SyntheticEvent, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { OptionState } from \"../context/Filters.context\";\r\nimport { CheckboxSvg } from \"./CheckboxSvg\";\r\n\r\nimport Button from 'carbon-react/lib/components/button';\r\nimport { useLabels } from \"../context/Labels.context\";\r\n\r\nconst DropdownWrap = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst DropdownButton = styled.button`\r\n    display: block;\r\n    cursor: pointer;\r\n    display: flex;\r\n    height: 2.5rem;\r\n    width: 100%;\r\n    font-size: var(--body-text-size, .875rem);\r\n    line-height: 1;\r\n    position: relative;\r\n    align-items: center;\r\n    background: #fff;\r\n    color: rgba(0,0,0,0.9);\r\n    border: 1px solid #668592;\r\n    box-sizing: border-box;\r\n    border-radius: 0;\r\n    font-family: inherit;\r\n    padding: 0 0.6875rem;\r\n    &:focus{\r\n        outline: none;\r\n        box-shadow: ${({ theme }) => theme.colors.focus} 0px 0px 0px 3px;\r\n    }\r\n    &::after{\r\n        margin-left: auto;\r\n        width: 1rem;\r\n        font-family: CarbonIcons;\r\n        content: \"\\\\e910\";\r\n        font-size: 1rem;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        line-height: 1;\r\n        display: block;\r\n        vertical-align: middle;\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst DropdownOptions = styled.ul<{ visible: boolean, expanded: boolean }>`\r\n    user-select: none;\r\n    background-color: white;\r\n    box-shadow: 0 5px 5px 0 rgba(0,20,29,0.2), 0 10px 10px 0 rgba(0,20,29,0.1);\r\n    position: absolute;\r\n    z-index: 1000;\r\n    top: 2.5rem;\r\n    width: calc(100% + .5em);\r\n    left: -.25rem;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: none;\r\n    max-height: 0;\r\n    transition: max-height 0.15s ease-out;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    ${props => props.visible && `\r\n        display: block;\r\n    `}\r\n    ${props => props.expanded && `\r\n        max-height: 11.25rem;\r\n    `}\r\n`;\r\n\r\nconst DropdownOptionItem = styled.li<{ isDisabled: boolean }>`\r\n    padding: .5rem 1rem;\r\n    height: 2.5rem;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    line-height: 1;\r\n    display: flex;\r\n    &:focus {\r\n        outline: none;\r\n        &>div {\r\n            box-shadow: ${({ theme }) => theme.colors.focus} 0px 0px 0px 3px;\r\n        }\r\n    }\r\n    &:hover {\r\n        background-color: #F2F5F6;\r\n    }\r\n\r\n    ${({ isDisabled }) => isDisabled && `\r\n        cursor: not-allowed;\r\n        color: rgba(0, 0, 0, 0.3);\r\n    `}\r\n`;\r\n\r\nconst OptionText = styled.span`\r\n    margin-left: .75em;\r\n`;\r\n\r\nconst SelectedOptions = styled.div`\r\n    display: block;\r\n    margin: .5rem 0;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n    margin-left: -1rem;\r\n`;\r\ninterface ComponentProps {\r\n    label: string;\r\n    options: OptionState[],\r\n    selectOption: (optionId: string, disabled?: boolean) => void;\r\n    clearAll: () => void;\r\n}\r\n\r\n\r\nexport const MultiSelectDropdown: FunctionComponent<ComponentProps> = ({ label, options, clearAll, selectOption, children }) => {\r\n\r\n    const displayClearAll = options.filter((option) => option.selected).length > 0;\r\n\r\n    const listRef = useRef<HTMLUListElement | null>(null);\r\n    const buttonRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [focused, setFocused] = useState<number>(0);\r\n\r\n    const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\r\n\r\n    const t = useLabels();\r\n\r\n    useEffect(() => {\r\n        const selected = options\r\n            .filter((option) => option.selected)\r\n            .map((option) => option.title);\r\n        setSelectedOptions(selected);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setExpanded(false);\r\n            setFocused(0);\r\n            return;\r\n        }\r\n        const timeout = setTimeout(() => {\r\n            listRef.current?.scrollTo(0, 0);\r\n            setExpanded(true);\r\n        }, 1000 / 30);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [open, setExpanded, setFocused]);\r\n\r\n    useEffect(() => {\r\n        const handleMoveOutside = (event: Event): void => {\r\n            if (listRef.current && event.target && !listRef.current.contains(event.target as Node)) {\r\n                setOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"click\", handleMoveOutside);\r\n        document.addEventListener(\"focusin\", handleMoveOutside);\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleMoveOutside);\r\n            document.removeEventListener(\"focusin\", handleMoveOutside);\r\n        };\r\n    }, [listRef, setOpen]);\r\n\r\n    const handleClick = useCallback((event: SyntheticEvent) => {\r\n        event.stopPropagation();\r\n        setOpen(!open);\r\n    }, [setOpen, open]);\r\n\r\n    const clickTitle = useCallback(() => {\r\n        buttonRef.current?.focus();\r\n        if (!open) {\r\n            requestAnimationFrame(() => {\r\n                setOpen(true);\r\n            });\r\n        }\r\n    }, [buttonRef, setOpen, open]);\r\n\r\n    useEffect(() => {\r\n        if (!open || !listRef.current) {\r\n            return;\r\n        }\r\n        const items = (listRef.current?.querySelectorAll('[role=\"menuitemcheckbox\"]') as NodeList);\r\n        (items[focused] as HTMLElement)?.focus();\r\n    }, [focused, open, listRef]);\r\n\r\n\r\n    const handleButtonKeyDown = useCallback((event: SyntheticEvent): void => {\r\n        switch ((event.nativeEvent as KeyboardEvent).key) {\r\n            // These already trigger the click event listener, so can be ignored\r\n            // case \" \":\r\n            // case \"Enter\":\r\n            case \"ArrowUp\":\r\n            case \"ArrowDown\":\r\n                setOpen(true);\r\n                return;\r\n        }\r\n    }, [setOpen]);\r\n\r\n    const handleKeyDown = useCallback((event: SyntheticEvent): void => {\r\n        switch ((event.nativeEvent as KeyboardEvent).key) {\r\n            case 'Escape': {\r\n                setFocused(0);\r\n                setOpen(false);\r\n                return;\r\n            }\r\n            case ' ':\r\n            case 'Enter': {\r\n                event.preventDefault();\r\n                const optionToSelect = options[focused];\r\n                if (!optionToSelect) {\r\n                    return;\r\n                }\r\n                selectOption(optionToSelect.id, optionToSelect.disabled);\r\n                return;\r\n            }\r\n            case 'ArrowDown': {\r\n                event.preventDefault();\r\n                setFocused(Math.min(focused + 1, options.length - 1));\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                event.preventDefault();\r\n                setFocused(Math.max(focused - 1, 0));\r\n                break;\r\n            }\r\n        }\r\n\r\n        // TODO: scroll option into view\r\n    }, [focused, options, selectOption]);\r\n\r\n    return <>\r\n        <div onClick={clickTitle}>\r\n            {children}\r\n        </div>\r\n        <DropdownWrap>\r\n            <DropdownButton\r\n                onClick={handleClick}\r\n                onKeyDown={handleButtonKeyDown}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : 'false'}\r\n                ref={buttonRef}\r\n                onFocus={event => event.stopPropagation()}\r\n            >\r\n                {selectedOptions.length === 0 ?\r\n                    <>{t('dropdown.select')} {label.toLowerCase()}</> :\r\n                    <>({selectedOptions.length} {t('dropdown.selected')})</>\r\n                }\r\n            </DropdownButton>\r\n\r\n            <DropdownOptions\r\n                visible={open}\r\n                expanded={expanded}\r\n                z-index={open ? \"0\" : \"-1\"}\r\n                role=\"menu\"\r\n                aria-label={`Select ${label}`}\r\n                ref={listRef}\r\n                onKeyDown={handleKeyDown}\r\n            >\r\n                {options.map((option, index) => <DropdownOptionItem\r\n                    tabIndex={index === focused ? 0 : -1}\r\n                    key={option.id}\r\n                    role=\"menuitemcheckbox\"\r\n                    data-value={option.id}\r\n                    onClick={() => selectOption(option.id, option.disabled)}\r\n                    aria-checked={option.selected ? 'true' : 'false'}\r\n                    aria-disabled={option.disabled}\r\n                    isDisabled={Boolean(option.disabled)}\r\n                >\r\n                    <CheckboxSvg\r\n                        isDisabled={Boolean(option.disabled)}\r\n                        checked={Boolean(option.selected)}\r\n                    />\r\n                    <OptionText\r\n                        dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(option.title) }}\r\n                    />\r\n                </DropdownOptionItem>)}\r\n            </DropdownOptions>\r\n\r\n            {selectedOptions.length > 0 &&\r\n                <SelectedOptions>{selectedOptions.join(\", \")}</SelectedOptions>\r\n            }\r\n\r\n            {displayClearAll &&\r\n                <ButtonWrap>\r\n                    <Button\r\n                        onClick={clearAll}\r\n                        buttonType=\"tertiary\"\r\n                        size=\"small\"\r\n                        px={0}\r\n                    >{t('buttons.clear')} {label.toLowerCase()}</Button>\r\n                </ButtonWrap>\r\n            }\r\n        </DropdownWrap>\r\n    </>;\r\n}","import { FunctionComponent, useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { OptionState } from \"../context/Filters.context\";\r\nimport { Checkbox } from './Checkbox';\r\nimport { MultiSelectDropdown } from './MultiSelectDropdown';\r\n\r\nconst TaxonomyTitle = styled.legend`\r\n    margin: 0 0 .5rem;\r\n    font-size: var(--body-text-size, .875rem);\r\n    font-weight: 600;\r\n`;\r\n\r\nconst TaxonomyWrap = styled.fieldset`\r\n    margin: 0 0 2rem;\r\n    border: none;\r\n    padding: 0;\r\n`;\r\n\r\ninterface ComponentProps {\r\n    title: string;\r\n    options: { [option: string]: OptionState },\r\n    selectOption: (optionId: string) => void;\r\n    clearAll: () => void;\r\n}\r\n\r\nexport const TaxonomyOptionSelector: FunctionComponent<ComponentProps> = ({ title, options, selectOption, clearAll }) => {\r\n\r\n    const handleChange = useCallback((option: string, disabled = false): void => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n        selectOption(option);\r\n    }, [selectOption]);\r\n\r\n    const useDropdown = useMemo(() => Object.keys(options).length > 3, [options]);\r\n\r\n    return <TaxonomyWrap>\r\n        {useDropdown ?\r\n            <MultiSelectDropdown\r\n                label={title}\r\n                clearAll={clearAll}\r\n                selectOption={handleChange}\r\n                options={Object.keys(options).map((option) => options[option])}\r\n            >\r\n                <TaxonomyTitle>{title}</TaxonomyTitle>\r\n            </MultiSelectDropdown>\r\n            :\r\n            <>\r\n                <TaxonomyTitle>{title}</TaxonomyTitle>\r\n                {Object.keys(options).map((key) => {\r\n                    const option = options[key];\r\n                    return <Checkbox\r\n                        key={key}\r\n                        name={option.id}\r\n                        checked={option.selected}\r\n                        id={option.id}\r\n                        label={option.title}\r\n                        disabled={option.disabled}\r\n                        onChange={() => handleChange(option.id, option.disabled)}\r\n                    />;\r\n                })}\r\n            </>\r\n        }\r\n    </TaxonomyWrap>;\r\n}","import Button from \"carbon-react/lib/components/button\";\r\nimport { FunctionComponent, useCallback, useContext, useEffect, useReducer } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiltersContext, filtersReducer } from \"../context/Filters.context\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport { SidebarContext } from \"../context/Sidebar.context\";\r\nimport { TaxonomyOptionSelector } from \"./TaxonomyOptionSelector\";\r\n\r\nconst ButtonWrap = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const TaxonomySelector: FunctionComponent = () => {\r\n    const filtersContext = useContext(FiltersContext);\r\n    const { close } = useContext(SidebarContext);\r\n\r\n    const [state, dispatch] = useReducer(filtersReducer, {});\r\n\r\n    const t = useLabels()\r\n\r\n    useEffect(() => {\r\n        // Copy filters to state\r\n        dispatch({ type: 'SET', payload: filtersContext.filters });\r\n    }, [filtersContext.filters, dispatch])\r\n\r\n    const selectOption = useCallback(\r\n        (key: string) => {\r\n            return (option: string) => {\r\n                dispatch({ type: 'TOGGLE', payload: { taxonomy: key, option: option } })\r\n            }\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const clearAll = useCallback((id: string) => {\r\n        dispatch({ type: 'CLEAR_SELECTED', payload: id });\r\n    }, [dispatch]);\r\n\r\n    const apply = () => {\r\n        filtersContext.overwrite(state);\r\n        close();\r\n    }\r\n\r\n    const reset = () => {\r\n        filtersContext.clearAll();\r\n        close();\r\n    }\r\n\r\n    return <>\r\n        { Object.keys(state).map((key: string) => {\r\n            const taxonomy = state[key];\r\n            return <div key={taxonomy.id}>\r\n                <TaxonomyOptionSelector\r\n                    title={taxonomy.title}\r\n                    options={taxonomy.options}\r\n                    selectOption={selectOption(key)}\r\n                    clearAll={() => clearAll(taxonomy.id)}\r\n                />\r\n            </div>\r\n        })}\r\n\r\n        <ButtonWrap>\r\n            <Button buttonType=\"tertiary\" onClick={reset}>{t('buttons.clear')}</Button>\r\n            <Button buttonType=\"primary\" onClick={apply}>{t('buttons.apply-filters')}</Button>\r\n        </ButtonWrap>\r\n    </>;\r\n}","import Icon from \"carbon-react/lib/components/icon\";\r\nimport Typography from \"carbon-react/lib/components/typography\";\r\nimport { FunctionComponent, useCallback, useContext, useEffect, useReducer, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\nimport { SidebarContext } from \"../context/Sidebar.context\";\r\nimport { TaxonomySelector } from './TaxonomySelector';\r\n\r\nconst BackgroundEle = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background: rgba(0, 20, 29, 0.6);\r\n    z-index: 1000001;\r\n`;\r\n\r\nconst SidebarEle = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 320px;\r\n    z-index: 1000002;\r\n    background: rgb(242 244 245);\r\n    box-shadow: rgb(0 20 29 / 10%) 0px 10px 30px 0px, rgb(0 20 29 / 10%) 0px 30px 60px 0px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SidebarTitle = styled.div`\r\n    background: #fff;\r\n    padding: 1.5rem 2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst SidebarContent = styled.div`\r\n    padding: 2rem;\r\n    border-bottom: 1px solid rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n    padding: 0;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n    &:focus{\r\n        outline: rgb(255, 181, 0) solid 3px\r\n    }\r\n`;\r\n\r\ninterface State {\r\n    styles: {\r\n        bg: {\r\n            opacity: number\r\n        },\r\n        sidebar: {\r\n            transform: string,\r\n            opacity: number\r\n        },\r\n    }\r\n    animating: boolean,\r\n    direction: 'OPENING' | 'CLOSING'\r\n}\r\n\r\nconst animationReducer = (state: State, action: any): State => {\r\n    switch (action.type) {\r\n        case \"OPEN\":\r\n            return {\r\n                ...state,\r\n                animating: state.direction === 'CLOSING',\r\n                direction: 'OPENING',\r\n            };\r\n        case \"CLOSE\":\r\n            return {\r\n                ...state,\r\n                animating: state.direction === 'OPENING',\r\n                direction: 'CLOSING',\r\n            };\r\n        case \"DONE\":\r\n            return {\r\n                ...state,\r\n                animating: false\r\n            }\r\n        case \"TICK\":\r\n            const t = action.payload;\r\n            let styles;\r\n            if (state.direction === 'OPENING') {\r\n                const sidebarT = Math.max(0, Math.min((t - .4) / .6, 1));\r\n                styles = {\r\n                    bg: {\r\n                        opacity: Math.min(t / .5, 1),\r\n                    },\r\n                    sidebar: {\r\n                        opacity: sidebarT,\r\n                        transform: `translate(${(1 - sidebarT) * 100}%)`\r\n                    }\r\n                }\r\n            } else {\r\n                const sidebarT = Math.max(0, Math.min((t) / .6, 1));\r\n                styles = {\r\n                    bg: {\r\n                        opacity: 1 - ((t - .5) / .5),\r\n                    },\r\n                    sidebar: {\r\n                        opacity: 1 - sidebarT,\r\n                        transform: `translate(${sidebarT * 100}%)`\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                styles\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst useAnimation = (duration = 500) => {\r\n    const [animation, dispatch] = useReducer(animationReducer, {\r\n        animating: false,\r\n        direction: 'CLOSING',\r\n        styles: {\r\n            bg: {\r\n                opacity: 0,\r\n            },\r\n            sidebar: {\r\n                opacity: 0,\r\n                transform: 'translateX(-100%)',\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!animation.animating) {\r\n            return;\r\n        }\r\n\r\n        let done = false;\r\n        const start = Date.now();\r\n\r\n        const tick = () => {\r\n            const t = (Date.now() - start) / duration;\r\n\r\n            if (done) {\r\n                return;\r\n            }\r\n\r\n            if (t > 1) {\r\n                dispatch({ type: 'TICK', payload: 1 });\r\n                dispatch({ type: 'DONE' });\r\n                return;\r\n            }\r\n            dispatch({ type: 'TICK', payload: t });\r\n            requestAnimationFrame(tick);\r\n        }\r\n\r\n        tick();\r\n        return () => {\r\n            done = true;\r\n        }\r\n    }, [animation.animating, animation.direction, duration]);\r\n\r\n    const open = useCallback(\r\n        () => {\r\n            dispatch({ type: 'OPEN' })\r\n        },\r\n        [dispatch],\r\n    );\r\n\r\n    const close = useCallback(\r\n        () => {\r\n            dispatch({ type: 'CLOSE' })\r\n        },\r\n        [dispatch],\r\n    );\r\n\r\n    return { animation, open, close }\r\n}\r\n\r\nexport const FiltersSidebar: FunctionComponent = () => {\r\n\r\n    const { animation, open, close } = useAnimation(350);\r\n\r\n    const sidebarContext = useContext(SidebarContext);\r\n    const t = useLabels();\r\n    const closeButtonRef = useRef<HTMLButtonElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (sidebarContext.isOpen) {\r\n            requestAnimationFrame(() => {\r\n                closeButtonRef.current?.focus({ preventScroll: true });\r\n            })\r\n        }\r\n    }, [sidebarContext.isOpen, closeButtonRef])\r\n\r\n\r\n    useEffect(() => {\r\n        if (sidebarContext.isOpen) {\r\n            open();\r\n        } else {\r\n            close();\r\n        }\r\n    }, [sidebarContext.isOpen, open, close]);\r\n\r\n\r\n    if (!(sidebarContext.isOpen || animation.animating)) {\r\n        return null;\r\n    }\r\n\r\n    return <>\r\n        <BackgroundEle\r\n            style={{ ...animation.styles.bg }}\r\n            onClick={sidebarContext.close}\r\n        />\r\n        <SidebarEle style={{\r\n            ...animation.styles.sidebar\r\n        }}>\r\n            <SidebarTitle>\r\n                {/* @ts-expect-error */}\r\n                <Typography mb={0} fontSize=\"20px\" lineHeight=\"1.25\" fontWeight=\"700\" as=\"h2\">{t('titles.filters')}</Typography>\r\n                <CloseButton type=\"button\" ref={closeButtonRef} onClick={close} aria-label=\"Close\">\r\n                    <Icon type=\"close\" />\r\n                </CloseButton>\r\n            </SidebarTitle>\r\n            <SidebarContent>\r\n                <TaxonomySelector />\r\n            </SidebarContent>\r\n        </SidebarEle >\r\n    </>\r\n}\r\n","import { FunctionComponent, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nexport const LanguageSwitcher: FunctionComponent = () => {\r\n    const appContext = useContext(AppContext);\r\n    const { language } = useParams<{ language: string, version: string }>();\r\n\r\n    useEffect(() => {\r\n        appContext.actions?.switchLanguage(language);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [language]);\r\n\r\n    return null;\r\n}","import { FunctionComponent, useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nexport const SetTitle: FunctionComponent<{ title: string }> = ({ title }) => {\r\n    const { options } = useContext(AppContext);\r\n\r\n    if (!options.setPageTitle) {\r\n        return null;\r\n    }\r\n\r\n    return <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n}","import React, { FunctionComponent, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { ReleaseNoteResponseModel } from \"../models\";\r\n\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nimport { Sidebar } from './Sidebar';\r\nimport { ReleaseNoteTitle } from './ReleaseNoteTitle';\r\nimport { ReleaseNoteContent } from './ReleaseNoteContent';\r\nimport { MissingRelease } from './MissingRelease';\r\nimport { MissingReleaseTitle } from './MissingReleaseTitle';\r\nimport { ArticleFooter } from './ArticleFooter';\r\nimport { FiltersSidebar } from './FiltersSidebar';\r\n\r\nimport { FiltersContextProvider } from '../context/Filters.context';\r\nimport { SidebarContextProvider } from '../context/Sidebar.context';\r\nimport { ModuleContextProvider } from '../context/Modules.context';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { LanguageSwitcher } from \"./LanguageSwitcher\";\r\nimport { SetTitle } from \"./SetTitle\";\r\nimport { useLabels } from \"../context/Labels.context\";\r\n\r\nconst ContentWrap = styled.div`\r\n    padding: 0 1rem;\r\n    margin: auto;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        padding: 0 1.5rem;\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        padding: 0 2rem;\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop.min}) {\r\n        padding: 0 2.5rem;\r\n    }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    flex: 1;\r\n    width: 100%;\r\n    margin: auto;\r\n    padding: var(--header-height, 3rem) 0 0;\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto auto;\r\n    grid-template-areas:\r\n        \"sidebar\"\r\n        \"title\"\r\n        \"content\";\r\n    @media print {\r\n        grid-template-areas:\r\n            \"title\"\r\n            \"sidebar\"\r\n            \"content\";\r\n    }\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tabletLandscape.min}) {\r\n        grid-template-columns: 320px 1fr;\r\n        grid-template-rows: auto 1fr;\r\n        grid-template-areas:\r\n            \"sidebar title\"\r\n            \"sidebar content\";\r\n    }\r\n`;\r\n\r\nconst GridItemTitle = styled.div`\r\n    grid-area: title;\r\n    max-width: ${props => props.theme.containerWidth};\r\n    width: 100%;\r\n    justify-self: center;\r\n`;\r\n\r\nconst GridItemSidebar = styled.div`\r\n    position: relative;\r\n    grid-area: sidebar;\r\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet.min}) {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\nconst GridItemMain = styled.main`\r\n    width: 100%;\r\n    grid-area: content;\r\n    max-width: ${props => props.theme.containerWidth};\r\n    justify-self: center;\r\n    margin-bottom: 4rem;\r\n`;\r\n\r\nexport const ReleaseNote: FunctionComponent = () => {\r\n    const [release, setRelease] = useState<ReleaseNoteResponseModel | null>(null);\r\n    const [noteUrl, setNoteUrl] = useState<string>('');\r\n    const { state, actions } = useContext(AppContext);\r\n    const history = useHistory();\r\n    const t = useLabels();\r\n\r\n    let { version, language } = useParams<{ language: string, version: string }>();\r\n\r\n    // Change the url to load\r\n    useEffect(() => {\r\n        const url = state.archive?.releases.find((release) => release.id === version)?.url;\r\n        setNoteUrl(url ?? '');\r\n    }, [state.archive, version, setNoteUrl, history]);\r\n\r\n    // Load the url\r\n    useEffect(() => {\r\n        if (!noteUrl) return;\r\n        actions.loadData(noteUrl);\r\n    }, [noteUrl, actions, version, language]);\r\n\r\n    // Set the release value\r\n    useEffect(() => {\r\n        if (state.data?.id !== release?.id || state.language !== release?.language) {\r\n            setRelease(state.data);\r\n        }\r\n    }, [state, release, setRelease]);\r\n\r\n\r\n    const isMissingRelease = useMemo(() => {\r\n        return !state.loading && !!state.archive && state.archive.releases.findIndex(({ id }) => id === version) === -1\r\n    }, [state, version]);\r\n\r\n    const title = useMemo(() => {\r\n        if (isMissingRelease) {\r\n            return t('titles.not-found');\r\n        }\r\n        return release?.title ? `${release.title} (${release.date})` : release?.date\r\n    }, [release, isMissingRelease, t]);\r\n\r\n\r\n    return <article>\r\n        <FiltersContextProvider release={release ?? undefined}>\r\n            <ModuleContextProvider>\r\n                <SidebarContextProvider>\r\n\r\n                    <LanguageSwitcher />\r\n\r\n                    {title && <SetTitle title={`${title} ${t('page-title.divider')} ${t('page-title.suffix')}`} />}\r\n\r\n                    <Grid>\r\n\r\n                        {isMissingRelease && <>\r\n                            <GridItemTitle>\r\n                                <ContentWrap>\r\n                                    <MissingReleaseTitle />\r\n                                </ContentWrap>\r\n                            </GridItemTitle>\r\n\r\n                            <GridItemSidebar>\r\n                                <Sidebar />\r\n                            </GridItemSidebar>\r\n\r\n                            <GridItemMain>\r\n                                <ContentWrap>\r\n                                    <MissingRelease />\r\n                                </ContentWrap>\r\n                            </GridItemMain>\r\n                        </>}\r\n\r\n                        {!isMissingRelease && release &&\r\n                            <>\r\n                                <GridItemTitle>\r\n                                    <ContentWrap>\r\n                                        <ReleaseNoteTitle\r\n                                            title={title || ''}\r\n                                            productName={state.archive?.product}\r\n                                        />\r\n                                    </ContentWrap>\r\n                                </GridItemTitle>\r\n\r\n                                <GridItemSidebar>\r\n                                    <Sidebar />\r\n                                </GridItemSidebar>\r\n\r\n                                <GridItemMain>\r\n                                    <ContentWrap>\r\n                                        <ReleaseNoteContent\r\n                                            release={release}\r\n                                        />\r\n                                    </ContentWrap>\r\n                                </GridItemMain>\r\n\r\n                                <ArticleFooter />\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n\r\n                    <FiltersSidebar />\r\n                </SidebarContextProvider>\r\n            </ModuleContextProvider>\r\n        </FiltersContextProvider>\r\n    </article>;\r\n}\r\n\r\nexport default ReleaseNote;"],"sourceRoot":""}